/**
 *  vars
 *  (c) VARIANTE (http://variante.io)
 *
 *  This software is released under the MIT License:
 *  http://www.opensource.org/licenses/mit-license.php
 */

/**
 * Clearfix hack for floated elements.
 */
@mixin clearfix
{
    *zoom: 1;

    &:before
    {
        content: '';
        display: table;
    }

    &:after
    {
        content: '';
        display: table;
        clear: both;
    }
}

/**
 * Transforms containing selector into a container that can freely align
 * child inline-blocks with no fixed width/height requirements.
 *
 * @param   {String} $alignH    Horizontal alignment of child elements (i.e. left, center, right)
 * @param   {String} $alignV    Horizontal alignment of child elements (i.e. top, center, bototm)
 * @param   {String} $inline    Specifies if this block is an inline block
 */
@mixin fluid-block($alignH:center, $alignV:center, $inline:false)
{
    @include container-block($inline);

    @if $alignH == 'left'
    {
        text-align: left;
    }
    @else if $alignH == 'center' or $alignH == 'middle'
    {
        text-align: center;
    }
    @else if $alignH == 'right'
    {
        text-align: right;
    }

    @if $alignV == 'top'
    {
        & > *
        {
            vertical-align: top;
        }
    }
    @else if $alignV == 'center' or $alignV == 'middle'
    {
        & > *
        {
            vertical-align: middle;
        }
    }
    @else if $alignV == 'bottom'
    {
        & > *
        {
            vertical-align: bottom;
        }
    }

    @if $inline == true
    {
        display: inline-block;
    }
    @else
    {
        display: block;
    }

    &:before
    {
        height: 100%;
        vertical-align: middle;
        content: '';
        display: inline-block;
    }
}

/**
 * Eliminates gaps between child inline blocks of target selector and applies
 * generic wrapper styles. Note that children within the target selector must
 * reset its font-size.
 *
 * @param   {String} $inline    Specifies if this block is an inline block
 * @see content-block
 */
@mixin container-block($inline:false)
{
    margin: 0;
    padding: 0;
    font-size: 0;
    line-height: 0;
    box-sizing: border-box;

    @if $inline == true
    {
        display: inline-block;
    }
    @else
    {
        display: block;
    }
}

/**
 * Resets the font-size of a target selector. This is generally used to undo
 * the effects of a container-block.
 *
 * @param   {String} $inline    Specifies if this block is an inline block
 * @see container-block
 */
@mixin content-block($inline:false)
{
    font-size: $font-size-reset;
    white-space: initial;

    @if $inline == true
    {
        display: inline-block;
    }
    @else
    {
        display: block;
    }
}

/**
 * Aligns containing selector to specified x/y directions in absolute
 * position.
 *
 * @param  {String} $x  x-direction (i.e. left, center, right)
 * @param  {String} $y  y-direction (i.e. top, center, bottom)
 */
@mixin abs-align($x:null, $y:null)
{
    position: absolute;

    @if $x == 'left'
    {
        left: 0px;
    }
    @else if $x == 'center' or $x == 'middle'
    {
        left: 0px;
        right: 0px;
        margin-left: auto;
        margin-right: auto;
    }
    @else if $x == 'right'
    {
        right: 0px;
    }

    @if $y == 'top'
    {
        top: 0px;
    }
    @else if $y == 'center' or $y == 'middle'
    {
        top: 0px;
        bottom: 0px;
        margin-top: auto;
        margin-bottom: auto;
    }
    @else if $y == 'bottom'
    {
        bottom: 0px;
    }
}

/**
 * Aligns containing inline-block to specified x/y directions in relative
 * position.
 *
 * @param  {String} $x  x-direction (i.e. left, center, right)
 * @param  {String} $y  y-direction (i.e. top, center, bottom)
 */
@mixin inline-align($x:null, $y:null)
{
    display: inline-block;
    position: relative;

    @if $x == 'left'
    {
        // This should be configured in the parent using { text-align: left; }.
    }
    @else if $x == 'center' or $x == 'middle'
    {
        // This should be configured in the parent using { text-align: center; }.
    }
    @else if $x == 'right'
    {
        // This should be configured in the parent using { text-align: right; }.
    }

    @if $y == 'top'
    {
        vertical-align: top;
    }
    @else if $y == 'center' or $y == 'middle'
    {
        vertical-align: middle;
    }
    @else if $y == 'bottom'
    {
        vertical-align: middle;
    }
}
