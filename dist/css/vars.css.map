{"version":3,"sources":["vars.scss","mixins/selectors.scss","mixins/alignments.scss","mixins/attributes.scss","mixins/features.scss","mixins/media.scss","normalize.scss","vars.css","reset.scss"],"names":[],"mappings":"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","file":"vars.css","sourcesContent":["/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\n\n$modernizr-enabled: false !default;\n\n@import 'mixins/selectors';\n@import 'mixins/alignments';\n@import 'mixins/attributes';\n@import 'mixins/features';\n@import 'mixins/media';\n\n@import 'normalize';\n@import 'reset';\n","/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\n\n@mixin labels {\n  a      { @content; }\n  p      { @content; }\n  li     { @content; }\n  em     { @content; }\n  strong { @content; }\n  h1     { @content; }\n  h2     { @content; }\n  h3     { @content; }\n  h4     { @content; }\n  h5     { @content; }\n  h6     { @content; }\n  label  { @content; }\n  span   { @content; }\n}\n\n@mixin statics {\n  form { @content; }\n}\n\n@mixin buttons {\n  a[type='button']       { @content; }\n  input[type='submit']   { @content; }\n  input[type='button']   { @content; }\n  input[type='checkbox'] { @content; }\n  button                 { @content; }\n}\n\n@mixin textfields {\n  input[type='text']           { @content; }\n  input[type='password']       { @content; }\n  input[type='number']         { @content; }\n  input[type='date']           { @content; }\n  input[type='month']          { @content; }\n  input[type='week']           { @content; }\n  input[type='time']           { @content; }\n  input[type='datetime']       { @content; }\n  input[type='datetime-local'] { @content; }\n  input[type='email']          { @content; }\n  input[type='search']         { @content; }\n  input[type='tel']            { @content; }\n  input[type='url']            { @content; }\n  textarea                     { @content; }\n}\n\n@mixin boxes {\n  article    { @content; }\n  aside      { @content; }\n  details    { @content; }\n  dialog     { @content; }\n  summary    { @content; }\n  footer     { @content; }\n  header     { @content; }\n  main       { @content; }\n  figcaption { @content; }\n  figure     { @content; }\n  hgroup     { @content; }\n  nav        { @content; }\n  section    { @content; }\n  div        { @content; }\n  table      { @content; }\n  tr         { @content; }\n  td         { @content; }\n  th         { @content; }\n  tbody      { @content; }\n  thead      { @content; }\n  tfoot      { @content; }\n  col        { @content; }\n}\n\n@mixin lists {\n  ul { @content; }\n  ol { @content; }\n}\n","/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\n\n/**\n * Clearfix hack for floated elements.\n */\n@mixin clearfix {\n  *zoom: 1;\n\n  &:before {\n    content: '';\n    display: table;\n  }\n\n  &:after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n}\n\n/**\n * Transforms containing selector into a container that can freely align\n * child inline-blocks with no fixed width/height requirements. Beware of whitespace\n * between inline elements.\n *\n * @param   {List}   $alignH  Horizontal alignment of child elements (i.e. left, center, right). Option to\n *                            specify left/right paddings respectively.\n * @param   {List}   $alignV  Vertical alignment of child elements (i.e. top, center, bototm). Option to\n *                            specify top/bottom paddings respectively.\n * @param   {String} $inline  Specifies if this block is an inline block.\n */\n@mixin fluid-block($alignH:center, $alignV:center, $inline:false)\n{\n  @if $alignH != null and length($alignH) > 0 {\n    @if length($alignH) > 1 { padding-left: nth($alignH, 2);  }\n    @if length($alignH) > 2 { padding-right: nth($alignH, 3); }\n  }\n\n  @if $alignV != null and length($alignV) > 0 {\n    @if length($alignV) > 1 { padding-top: nth($alignV, 2);    }\n    @if length($alignV) > 2 { padding-bottom: nth($alignV, 3); }\n  }\n\n  $h: nth($alignH, 1);\n  $v: nth($alignV, 1);\n\n  @if      $h == 'left'                     { text-align: left;   }\n  @else if $h == 'center' or $h == 'middle' { text-align: center; }\n  @else if $h == 'right'                    { text-align: right;  }\n\n  @if      $v == 'top'                      { & > * { vertical-align: top;    } }\n  @else if $v == 'center' or $v == 'middle' { & > * { vertical-align: middle; } }\n  @else if $v == 'bottom'                   { & > * { vertical-align: bottom; } }\n\n  @if   $inline == true { display: inline-block; }\n  @else                 { display: block;        }\n\n  & > * {\n    display: inline-block;\n  }\n\n  &:before {\n    height: 100%;\n    vertical-align: middle;\n    content: '';\n    display: inline-block;\n  }\n}\n\n/**\n * Transforms containing selector into a flexbox which auto aligns child\n * elements according to the specified params.\n *\n * @param   {List}    $alignH     Horizontal alignment of child elements (i.e. left, center, right). Option\n *                                to specify left/right paddings respectively.\n * @param   {List}    $alignV     Vertical alignment of child elements (i.e. top, middle, bottom). Option\n *                                to specify top/bottom paddings respectively.\n * @param   {Boolean} $direction  Determines the main axis (i.e. row, row-reverse, column, column-reverse).\n * @param   {Boolean} $wrap       Determines if wrapping is enabled.\n * @param   {String}  $inline     Specifies if this flexbox is inline.\n */\n@mixin flex-block($alignH:center, $alignV:center, $direction:row, $wrap:false, $inline:false)\n{\n  line-height: normal;\n  white-space: normal;\n\n  @if   $wrap == true { flex-wrap: wrap;   }\n  @else               { flex-wrap: nowrap; }\n\n  @if $alignH != null and length($alignH) > 0 {\n    @if length($alignH) > 1 { padding-left: nth($alignH, 2);  }\n    @if length($alignH) > 2 { padding-right: nth($alignH, 3); }\n  }\n\n  @if $alignV != null and length($alignV) > 0 {\n    @if length($alignV) > 1 { padding-top: nth($alignV, 2);    }\n    @if length($alignV) > 2 { padding-bottom: nth($alignV, 3); }\n  }\n\n  $h: nth($alignH, 1);\n  $v: nth($alignV, 1);\n\n  @if $direction == 'row' {\n    flex-direction: row;\n\n    @if      $h == 'left'                     { justify-content: flex-start; }\n    @else if $h == 'center' or $h == 'middle' { justify-content: center;     }\n    @else if $h == 'right'                    { justify-content: flex-end;   }\n\n    @if      $v == 'top'                      { align-items: flex-start; }\n    @else if $v == 'center' or $v == 'middle' { align-items: center;     }\n    @else if $v == 'bottom'                   { align-items: flex-end;   }\n  }\n  @else if $direction == 'row-reverse' {\n    flex-direction: row-reverse;\n\n    @if      $h == 'left'                     { justify-content: flex-end;   }\n    @else if $h == 'center' or $h == 'middle' { justify-content: center;     }\n    @else if $h == 'right'                    { justify-content: flex-start; }\n\n    @if      $v == 'top'                      { align-items: flex-start; }\n    @else if $v == 'center' or $v == 'middle' { align-items: center;     }\n    @else if $v == 'bottom'                   { align-items: flex-end;   }\n  }\n  @else if $direction == 'column' {\n    flex-direction: column;\n\n    @if      $v == 'top'                       { justify-content: flex-start; }\n    @else if $v == 'center' or $v == 'middle'  { justify-content: center;     }\n    @else if $v == 'bottom'                    { justify-content: flex-end;   }\n\n    @if      $h == 'left'                     { align-items: flex-start; }\n    @else if $h == 'center' or $h == 'middle' { align-items: center;     }\n    @else if $h == 'right'                    { align-items: flex-end;   }\n  }\n  @else if $direction == 'column-reverse' {\n    flex-direction: column-reverse;\n\n    @if      $v == 'top'                       { justify-content: flex-end;   }\n    @else if $v == 'center' or $v == 'middle'  { justify-content: center;     }\n    @else if $v == 'bottom'                    { justify-content: flex-start; }\n\n    @if      $h == 'left'                     { align-items: flex-start; }\n    @else if $h == 'center' or $h == 'middle' { align-items: center;     }\n    @else if $h == 'right'                    { align-items: flex-end;   }\n  }\n\n  @if   $inline == true { display: inline-flex; }\n  @else                 { display: flex;        }\n}\n\n/**\n * Aligns containing selector to specified x/y directions in absolute position.\n *\n * @param  {List} $alignH     Horizontal alignment (left|center|right, left|right offset, right offset).\n * @param  {List} $alignV     Vertical alignment (top|center|middle|bottom, top|bottom offset, bottom offset).\n */\n@mixin abs-align($alignH:null, $alignV:null)\n{\n  display: block;\n  position: absolute;\n\n  @if $alignH != null and length($alignH) > 0 {\n    $align: nth($alignH, 1);\n    $offset1: null;\n    $offset2: null;\n\n    @if length($alignH) > 1 { $offset1: nth($alignH, 2); }\n    @if length($alignH) > 2 { $offset2: nth($alignH, 3); }\n\n    @if $align == 'left' {\n      @if $offset1 == null { left: 0px; } @else { left: $offset1; }\n      right: initial;\n    }\n    @else if $align == 'center' or $align == 'middle' {\n      margin-left: auto;\n      margin-right: auto;\n      @if $offset1 == null { left: 0px;  } @else { left: $offset1;  }\n      @if $offset2 == null { right: 0px; } @else { right: $offset2; }\n    }\n    @else if $align == 'right' {\n      @if $offset1 == null { right: 0px; } @else { right: $offset1; }\n      left: initial;\n    }\n  }\n\n  @if $alignV != null and length($alignV) > 0 {\n    $align: nth($alignV, 1);\n    $offset1: null;\n    $offset2: null;\n\n    @if length($alignV) > 1 { $offset1: nth($alignV, 2); }\n    @if length($alignV) > 2 { $offset2: nth($alignV, 3); }\n\n    @if $align == 'top' {\n      @if $offset1 == null { top: 0px; } @else { top: $offset1; }\n    }\n    @else if $align == 'center' or $align == 'middle' {\n      margin-top: auto;\n      margin-bottom: auto;\n      @if $offset1 == null { top: 0px;    } @else { top: $offset1;    }\n      @if $offset2 == null { bottom: 0px; } @else { bottom: $offset2; }\n    }\n    @else if $align == 'bottom' {\n      @if $offset1 == null { bottom: 0px; } @else { bottom: $offset1; }\n    }\n  }\n}\n\n/**\n * Aligns containing selector to specified x/y directions in fixed position.\n *\n * @param  {List} $alignH     Horizontal alignment (left|center|right, left|right offset, right offset).\n * @param  {List} $alignV     Vertical alignment (top|center|middle|bottom, top|bottom offset, bottom offset).\n */\n@mixin fixed-align($alignH:null, $alignV:null) {\n  display: block;\n  position: fixed;\n\n  @if $alignH != null and length($alignH) > 0 {\n    $align: nth($alignH, 1);\n    $offset1: null;\n    $offset2: null;\n\n    @if length($alignH) > 1 { $offset1: nth($alignH, 2); }\n    @if length($alignH) > 2 { $offset2: nth($alignH, 3); }\n\n    @if $align == 'left' {\n      @if $offset1 == null { left: 0px; } @else { left: $offset1; }\n    }\n    @else if $align == 'center' or $align == 'middle' {\n      margin-left: auto;\n      margin-right: auto;\n      @if $offset1 == null { left: 0px;  } @else { left: $offset1;  }\n      @if $offset2 == null { right: 0px; } @else { right: $offset2; }\n    }\n    @else if $align == 'right' {\n      @if $offset1 == null { right: 0px; } @else { right: $offset1; }\n    }\n  }\n\n  @if $alignV != null and length($alignV) > 0 {\n    $align: nth($alignV, 1);\n    $offset1: null;\n    $offset2: null;\n\n    @if length($alignV) > 1 { $offset1: nth($alignV, 2); }\n    @if length($alignV) > 2 { $offset2: nth($alignV, 3); }\n\n    @if $align == 'top' {\n      @if $offset1 == null { top: 0px; } @else { top: $offset1; }\n    }\n    @else if $align == 'center' or $align == 'middle' {\n      margin-top: auto;\n      margin-bottom: auto;\n      @if $offset1 == null { top: 0px;    } @else { top: $offset1;    }\n      @if $offset2 == null { bottom: 0px; } @else { bottom: $offset2; }\n    }\n    @else if $align == 'bottom' {\n      @if $offset1 == null { bottom: 0px; } @else { bottom: $offset1; }\n    }\n  }\n}\n\n/**\n * Aligns containing inline-block to specified x/y directions in relative\n * position.\n *\n * @param  {String} $alignH     Horizontal alignment (i.e. left, center, right).\n * @param  {String} $alignV     Vertical alignment (i.e. top, middle, bottom).\n */\n@mixin inline-align($alignH:null, $alignV:null) {\n  display: inline-block;\n  position: relative;\n\n  // Horizontal alignment cannot be altered at the child level. Tweak\n  // the parent's text-align rule instead.\n\n  @if      $alignV == 'top'                           { vertical-align: top;    }\n  @else if $alignV == 'center' or $alignV == 'middle' { vertical-align: middle; }\n  @else if $alignV == 'bottom'                        { vertical-align: bottom; }\n}\n\n/**\n * Transforms target selector into a container for\n * parallax elements.\n *\n * @param  {Number} $perspective    Tweak this value to adjust perspective.\n * @see parallax-element\n */\n@mixin parallax-block($perspective:1) {\n  height: 100vh;\n  overflow-x: hidden;\n  overflow-y: scroll;\n  perspective: #{$perspective + px};\n}\n\n/**\n * Transforms target selector into a parallax element. The\n * target selector must be a child of a parallax-block.\n *\n * @param  {String} $type   Layer type, either 'group' or 'layer'.\n * @param  {Number} $z      Position in the z-axis.\n * @see parallax-block\n */\n@mixin parallax-element($type:layer, $z:0) {\n  @if $type == 'group' {\n    height: 100vh;\n    position: relative;\n    transform-style: preserve-3d;\n  }\n  @else if $type == 'layer' {\n    transform: translateZ(#{$z + px});\n  }\n}\n\n/**\n * Sets the diameter of the target selector.\n *\n * @param  {Number}  $diameter\n * @param  {Boolean} $oval\n */\n@mixin diameter($diameter, $oval:false) {\n  width: $diameter;\n  height: $diameter;\n\n  @if $oval == true {\n    border-radius: $diameter / 2;\n    overflow: hidden;\n  }\n}\n\n/**\n * Fits dimension to parent container.\n *\n * @param  {Boolean} $w     Specifies whether to fit the width.\n * @param  {Boolean} $h     Specifies whether to fit the height.\n */\n@mixin auto-fit($w:true, $h:true) {\n  @if $w == true {\n    width: 100%;\n  }\n\n  @if $h == true {\n    height: 100%;\n  }\n}\n","/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\n\n/**\n * Selector for elements with the vs-controller attribute.\n *\n * @param  {String} $name vs-controller attribute value.\n */\n@mixin controller($name)\n{\n  [data-vs-controller='#{$name}'] { @content; }\n  [vs-controller='#{name}']       { @content; }\n}\n\n/**\n * Selector for elements with the vs-instance attribute.\n *\n * @param  {String} $name vs-instance attribute value.\n */\n@mixin instance($name)\n{\n  [data-vs-instance='#{$name}'] { @content; }\n  [vs-instance='#{name}']       { @content; }\n}\n\n/**\n * Selects elements with the specified vs-property key and value.\n *\n * @param  {String} $key    vs-property key.\n * @param  {String} $value  vs-property value, if applicable.\n * @param  {String} $scope  Specifies the scope relative to the target selector\n *                          in which this property applies to (any, this, parent, or child).\n */\n@mixin property($key, $value:null, $scope:'this') {\n  @if $value == null {\n    @if $scope == 'any' {\n      @at-root [data-vs-property-#{$key}] { @content; }\n      @at-root [vs-property-#{key}]       { @content; }\n    }\n    @else if $scope == 'this' {\n      &[data-vs-property-#{$key}] { @content; }\n      &[vs-property-#{key}]       { @content; }\n    }\n    @else if $scope == 'parent' {\n      [data-vs-property-#{$key}] & { @content; }\n      [vs-property-#{key}] &       { @content; }\n    }\n    @else if $scope == 'child' {\n      &[data-vs-property-#{$key}] * { @content; }\n      &[vs-property-#{key}] *       { @content; }\n    }\n  }\n  @else {\n    @if $scope == 'any' {\n      @at-root [data-vs-property-#{$key}='#{$value}'] { @content; }\n      @at-root [vs-property-#{key}='#{value}']        { @content; }\n    }\n    @else if $scope == 'this' {\n      &[data-vs-property-#{$key}='#{$value}'] { @content; }\n      &[vs-property-#{key}='#{value}']        { @content; }\n    }\n    @else if $scope == 'parent' {\n      [data-vs-property-#{$key}='#{$value}'] & { @content; }\n      [vs-property-#{key}='#{value}'] &        { @content; }\n    }\n    @else if $scope == 'child' {\n      &[data-vs-property-#{$key}='#{$value}'] * { @content; }\n      &[vs-property-#{key}='#{value}'] *        { @content; }\n    }\n  }\n}\n\n/**\n * Binds the content to one/multiple vs-states of the target selector.\n * Option to specify whether the state(s) are default.\n *\n * @param  {List}    $states    List of state names.\n * @param  {Boolean} $default   Specifies whether the class(es) are default.\n */\n@mixin state($states, $default:false) {\n  @each $state in $states {\n    @if $state == 'hover' {\n      @if $modernizr-enabled == true {\n        .no-touch &:hover { @content; }\n        .no-touch &[data-vs-state='hover'] { @content; }\n        .no-touch &[vs-state='hover']      { @content; }\n      }\n      @else {\n        &:hover { @content; }\n        &[data-vs-state='hover'] { @content; }\n        &[vs-state='hover']      { @content; }\n      }\n    }\n    @else {\n      &[data-vs-state='#{$state}'] { @content; }\n      &[vs-state='#{$state}']      { @content; }\n    }\n  }\n\n  @if $default == true {\n    @content;\n  }\n}\n\n/**\n * Binds the content to a vs-style of the target selector.\n * Option to specify whether the style is default.\n *\n * @param  {String}  $style     Style name.\n * @param  {Boolean} $default   Specifies whether the class(es) are default.\n * @param  {String}  $scope     Specifies the scope relative to the target selector\n *                              in which this property applies to (any, this, parent, or child).\n */\n@mixin style($style, $default:false, $scope:'this') {\n  @if $scope == 'any' {\n    @at-root [data-vs-style='#{$style}'] { @content; }\n    @at-root [vs-style='#{$style}'] { @content; }\n\n    @if $default == true {\n      @at-root * { @content; }\n    }\n  }\n  @else if $scope == 'this' {\n    &[data-vs-style='#{$style}'] { @content; }\n    &[vs-style='#{$style}']      { @content; }\n\n    @if $default == true {\n        @content;\n    }\n  }\n  @else if $scope == 'parent' {\n    [data-vs-style='#{$style}'] & { @content; }\n    [vs-style='#{$style}'] &      { @content; }\n\n    @if $default == true {\n      @content;\n    }\n  }\n  @else if $scope == 'child' {\n    &[data-vs-style='#{$style}'] * { @content; }\n    &[vs-style='#{$style}'] *      { @content; }\n\n    @if $default == true {\n      & * {\n        @content;\n      }\n    }\n  }\n}\n","/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\n\n/**\n * Binds the content to the target selector based on the 'csstransitions' feature\n * (requires Modernizr).\n *\n * @param  {Boolean} $enabled   Specifies whether 'csstransitions' class is required.\n */\n@mixin transition($enabled:true) {\n  @if $enabled == true and $modernizr-enabled == true {\n    .csstransitions & {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n/**\n * Binds the content to the target selector based on the 'cssanimations' feature\n * (requires Modernizr).\n *\n * @param  {Boolean} $enabled   Specifies whether 'cssanimations' class is required.\n */\n@mixin animation($enabled:true) {\n  @if $enabled == true and $modernizr-enabled == true {\n    .cssanimations & {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n/**\n * Binds the content to the target selector based on the 'touch' and 'no-touch' feature\n * (requires Modernizr).\n *\n * @param  {Boolean} $enabled   Specifies whether 'touch' class is required.\n * @param  {Boolean} $exclusive Specifies whether 'no-touch' class is required if\n *                              $enabled is false.\n */\n@mixin touch($enabled:true, $exclusive:false) {\n  @if $enabled == true and $modernizr-enabled == true {\n    .touch & {\n      @content;\n    }\n  }\n  @else {\n    @if $exclusive == true and $modernizr-enabled == true {\n      .no-touch & {\n        @content;\n      }\n    }\n    @else {\n      @content;\n    }\n  }\n}\n\n/**\n * Enables hardware acceleration for containing selector.\n */\n@mixin hardware-acceleration {\n  transform: translateZ(0);\n  transform: translate3d(0, 0, 0);\n  transform-style: preserve-3d;\n  backface-visibility: hidden;\n  perspective: 1000;\n}\n","/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\n\n/**\n * Media query for screens in portrait orientation.\n */\n@mixin screen-portrait { @media only screen and (orientation: portrait) { @content; } }\n\n/**\n * Media query for screens in landscape orientation.\n */\n@mixin screen-landscape { @media only screen and (orientation: landscape) { @content; } }\n\n/**\n * Media query for screens at a specified minimum width.\n *\n * @param  {Number} $minWidth\n */\n@mixin screen-min-width($minWidth) { @media only screen and (min-width: #{$minWidth}px) { @content; } }\n\n/**\n * Media query for screens at a specified maximum width.\n *\n * @param  {Number} $maxWidth\n */\n@mixin screen-max-width($maxWidth) { @media only screen and (max-width: #{$maxWidth}px) { @content; } }\n\n/**\n * Media query for screens at a specified minimum height.\n *\n * @param  {Number} $minHeight\n */\n@mixin screen-min-height($minHeight) { @media only screen and (min-height: #{$minHeight}px) { @content; } }\n\n/**\n * Media query for screens at a specified maximum height.\n *\n * @param  {Number} $maxHeight\n */\n@mixin screen-max-height($maxHeight) { @media only screen and (max-height: #{$maxHeight}px) { @content; } }\n\n/**\n * Media query for the minimum width/height threshold of the specified screen type.\n *\n * @param  {String}  $screen        Screen type (i.e. mobile, phablet, tablet, desktop).\n * @param  {Boolean} $exclusive     Specifies whether the media queries should be exclusive to this screen\n *                                  type. If false, the generated media query will use the minimum threshold\n *                                  of the selected screen type. If true, the generated media query will be\n *                                  bounded by the minimum and the maximum thresholds.\n * @param  {Boolean} $invert        Inverts the generated media query.\n * @param  {String}  $measurement   Specifies width or height measurement.\n * @param  {Boolean} $touch         Specifues whether the condition is only valid for touch devices\n *                                  (requires Modernizr feature detection), namely the '.touch' class.\n *                                  If false (default), it does NOT use the '.no-touch' class, but\n *                                  instead applies content normally.\n */\n@mixin screen($screen, $exclusive:false, $invert:false, $measurement:width, $touch:false) {\n  @if $screen == mobile {\n    $min-threshold: 0px;\n    $max-threshold: 599px;\n  }\n\n  @else if $screen == phablet {\n    $min-threshold: 600px;\n    $max-threshold: 767px;\n  }\n\n  @else if $screen == tablet {\n    $min-threshold: 768px;\n    $max-threshold: 1024px;\n  }\n\n  @else if $screen == desktop {\n    $min-threshold: 1025px;\n    $max-threshold: 10000px; // some ridiculously large arbituary number\n  }\n\n  @if $min-threshold != null and $max-threshold != null {\n    @if $exclusive == true {\n      @if $invert == true {\n        @media screen and (max-#{$measurement}: #{$min-threshold - 1px}) { @include touch($touch, false) { @content; } }\n        @media screen and (min-#{$measurement}: #{$max-threshold + 1px}) { @include touch($touch, false) { @content; } }\n      }\n      @else {\n        @media screen and (min-#{$measurement}: #{$min-threshold}) and (max-#{$measurement}: #{$max-threshold}) { @include touch($touch, false) { @content; } }\n      }\n    }\n    @else {\n      @if $invert == true {\n          @media screen and (max-#{$measurement}: #{$min-threshold - 1px}) { @include touch($touch, false) { @content; } }\n      }\n      @else {\n          @media screen and (min-#{$measurement}: $min-threshold) { @include touch($touch, false) { @content; } }\n      }\n    }\n  }\n}\n\n/**\n * Sets the background-size and background-position of a target element\n * which is using an image map to the corresponding item in the map.\n *\n * @param  {String} $path      Path of sprite map.\n * @param  {Number} $row-index 0-based index of the row of the target item.\n * @param  {Number} $col-index 0-based index of the column of the target item.\n * @param  {Number} $num-rows  Total number of rows in the image map.\n * @param  {Number} $num-cols  Total number of columns in the image map.\n */\n@mixin image-map-item($path, $row-index, $col-index, $num-rows, $num-cols) {\n  @if $path != null {\n    background-image: url($path);\n  }\n\n  $x: 0;\n  $y: 0;\n\n  @if $num-cols > 1 { $x: #{((100 / ($num-cols - 1)) * $col-index)}; }\n  @if $num-rows > 1 { $y: #{((100 / ($num-rows - 1)) * $row-index)}; }\n\n  background-size: #{$num-cols * 100}% #{$num-rows * 100}%;\n  background-position: #{$x}% #{$y}%;\n}\n\n/**\n * Auto generates a list of class names of the target selector, where each\n * class represents a sprite as provided by the sprite map.\n *\n * @param  {String} $path Path of sprite map.\n * @param  {List}   $map  List (1D or 2D) of class names. The position of each list item\n *                        directly corresponds to the sprite position on the sprite map.\n *\n * @note This mixin is quite slow in performance due to the nested loop.\n */\n@mixin image-map($path:null, $map:null) {\n  @if $path != null {\n    background-image: url($path);\n  }\n\n  @if $map != null {\n    $max-rows: length($map);\n\n    @if $max-rows > 0 {\n      @if type-of(nth($map, 1)) == list {\n        $max-cols: length(nth($map, 1));\n\n        @for $i from 1 through $max-rows {\n          $row: nth($map, $i);\n\n          @for $j from 1 through length(nth($map, $i)) {\n            $col: nth($row, $j);\n            &.#{$col} { @include image-map-item(null, $i - 1, $j - 1, $max-rows, $max-cols); }\n          }\n        }\n      }\n      @else {\n        @for $i from 1 through $max-rows {\n          $col: nth($map, $i);\n          &.#{$col} { @include image-map-item(null, 0, $i - 1, 1, $max-rows); }\n        }\n      }\n    }\n  }\n}\n","/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */\n\n/**\n * 1. Set default font family to sans-serif.\n * 2. Prevent iOS and IE text size adjust after device orientation change,\n *    without disabling user zoom.\n */\n\nhtml {\n  font-family: sans-serif; /* 1 */\n  -ms-text-size-adjust: 100%; /* 2 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/**\n * Remove default margin.\n */\n\nbody {\n  margin: 0;\n}\n\n/* HTML5 display definitions\n   ========================================================================== */\n\n/**\n * Correct `block` display not defined for any HTML5 element in IE 8/9.\n * Correct `block` display not defined for `details` or `summary` in IE 10/11\n * and Firefox.\n * Correct `block` display not defined for `main` in IE 11.\n */\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block;\n}\n\n/**\n * 1. Correct `inline-block` display not defined in IE 8/9.\n * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\n */\n\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block; /* 1 */\n  vertical-align: baseline; /* 2 */\n}\n\n/**\n * Prevent modern browsers from displaying `audio` without controls.\n * Remove excess height in iOS 5 devices.\n */\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n/**\n * Address `[hidden]` styling not present in IE 8/9/10.\n * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.\n */\n\n[hidden],\ntemplate {\n  display: none;\n}\n\n/* Links\n   ========================================================================== */\n\n/**\n * Remove the gray background color from active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * Improve readability of focused elements when they are also in an\n * active/hover state.\n */\n\na:active,\na:hover {\n  outline: 0;\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Address styling not present in IE 8/9/10/11, Safari, and Chrome.\n */\n\nabbr[title] {\n  border-bottom: 1px dotted;\n}\n\n/**\n * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\n */\n\nb,\nstrong {\n  font-weight: bold;\n}\n\n/**\n * Address styling not present in Safari and Chrome.\n */\n\ndfn {\n  font-style: italic;\n}\n\n/**\n * Address variable `h1` font-size and margin within `section` and `article`\n * contexts in Firefox 4+, Safari, and Chrome.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/**\n * Address styling not present in IE 8/9.\n */\n\nmark {\n  background: #ff0;\n  color: #000;\n}\n\n/**\n * Address inconsistent and variable font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` affecting `line-height` in all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsup {\n  top: -0.5em;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove border when inside `a` element in IE 8/9/10.\n */\n\nimg {\n  border: 0;\n}\n\n/**\n * Correct overflow not hidden in IE 9/10/11.\n */\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * Address margin not present in IE 8/9 and Safari.\n */\n\nfigure {\n  margin: 1em 40px;\n}\n\n/**\n * Address differences between Firefox and other browsers.\n */\n\nhr {\n  box-sizing: content-box;\n  height: 0;\n}\n\n/**\n * Contain overflow in all browsers.\n */\n\npre {\n  overflow: auto;\n}\n\n/**\n * Address odd `em`-unit font size rendering in all browsers.\n */\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * Known limitation: by default, Chrome and Safari on OS X allow very limited\n * styling of `select`, unless a `border` property is set.\n */\n\n/**\n * 1. Correct color not being inherited.\n *    Known issue: affects color of disabled elements.\n * 2. Correct font properties not being inherited.\n * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  color: inherit; /* 1 */\n  font: inherit; /* 2 */\n  margin: 0; /* 3 */\n}\n\n/**\n * Address `overflow` set to `hidden` in IE 8/9/10/11.\n */\n\nbutton {\n  overflow: visible;\n}\n\n/**\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\n * All other form control elements do not inherit `text-transform` values.\n * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\n * Correct `select` style inheritance in Firefox.\n */\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/**\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\n *    and `video` controls.\n * 2. Correct inability to style clickable `input` types in iOS.\n * 3. Improve usability and consistency of cursor style between image-type\n *    `input` and others.\n */\n\nbutton,\nhtml input[type=\"button\"], /* 1 */\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: button; /* 2 */\n  cursor: pointer; /* 3 */\n}\n\n/**\n * Re-set default cursor for disabled elements.\n */\n\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\n\n/**\n * Remove inner padding and border in Firefox 4+.\n */\n\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\n\n/**\n * Address Firefox 4+ setting `line-height` on `input` using `!important` in\n * the UA stylesheet.\n */\n\ninput {\n  line-height: normal;\n}\n\n/**\n * It's recommended that you don't attempt to style these elements.\n * Firefox's implementation doesn't respect box-sizing, padding, or width.\n *\n * 1. Address box sizing set to `content-box` in IE 8/9/10.\n * 2. Remove excess padding in IE 8/9/10.\n */\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Fix the cursor style for Chrome's increment/decrement buttons. For certain\n * `font-size` values of the `input`, it causes the cursor style of the\n * decrement button to change from `default` to `text`.\n */\n\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Address `appearance` set to `searchfield` in Safari and Chrome.\n * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.\n */\n\ninput[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  box-sizing: content-box; /* 2 */\n}\n\n/**\n * Remove inner padding and search cancel button in Safari and Chrome on OS X.\n * Safari (but not Chrome) clips the cancel button when the search input has\n * padding (and `textfield` appearance).\n */\n\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * Define consistent border, margin, and padding.\n */\n\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em;\n}\n\n/**\n * 1. Correct `color` not being inherited in IE 8/9/10/11.\n * 2. Remove padding so people aren't caught out if they zero out fieldsets.\n */\n\nlegend {\n  border: 0; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Remove default vertical scrollbar in IE 8/9/10/11.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * Don't inherit the `font-weight` (applied by a rule above).\n * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\n */\n\noptgroup {\n  font-weight: bold;\n}\n\n/* Tables\n   ========================================================================== */\n\n/**\n * Remove most spacing between table cells.\n */\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ntd,\nth {\n  padding: 0;\n}\n","/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\n/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\n/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\n/**\n * Clearfix hack for floated elements.\n */\n/**\n * Transforms containing selector into a container that can freely align\n * child inline-blocks with no fixed width/height requirements. Beware of whitespace\n * between inline elements.\n *\n * @param   {List}   $alignH  Horizontal alignment of child elements (i.e. left, center, right). Option to\n *                            specify left/right paddings respectively.\n * @param   {List}   $alignV  Vertical alignment of child elements (i.e. top, center, bototm). Option to\n *                            specify top/bottom paddings respectively.\n * @param   {String} $inline  Specifies if this block is an inline block.\n */\n/**\n * Transforms containing selector into a flexbox which auto aligns child\n * elements according to the specified params.\n *\n * @param   {List}    $alignH     Horizontal alignment of child elements (i.e. left, center, right). Option\n *                                to specify left/right paddings respectively.\n * @param   {List}    $alignV     Vertical alignment of child elements (i.e. top, middle, bottom). Option\n *                                to specify top/bottom paddings respectively.\n * @param   {Boolean} $direction  Determines the main axis (i.e. row, row-reverse, column, column-reverse).\n * @param   {Boolean} $wrap       Determines if wrapping is enabled.\n * @param   {String}  $inline     Specifies if this flexbox is inline.\n */\n/**\n * Aligns containing selector to specified x/y directions in absolute position.\n *\n * @param  {List} $alignH     Horizontal alignment (left|center|right, left|right offset, right offset).\n * @param  {List} $alignV     Vertical alignment (top|center|middle|bottom, top|bottom offset, bottom offset).\n */\n/**\n * Aligns containing selector to specified x/y directions in fixed position.\n *\n * @param  {List} $alignH     Horizontal alignment (left|center|right, left|right offset, right offset).\n * @param  {List} $alignV     Vertical alignment (top|center|middle|bottom, top|bottom offset, bottom offset).\n */\n/**\n * Aligns containing inline-block to specified x/y directions in relative\n * position.\n *\n * @param  {String} $alignH     Horizontal alignment (i.e. left, center, right).\n * @param  {String} $alignV     Vertical alignment (i.e. top, middle, bottom).\n */\n/**\n * Transforms target selector into a container for\n * parallax elements.\n *\n * @param  {Number} $perspective    Tweak this value to adjust perspective.\n * @see parallax-element\n */\n/**\n * Transforms target selector into a parallax element. The\n * target selector must be a child of a parallax-block.\n *\n * @param  {String} $type   Layer type, either 'group' or 'layer'.\n * @param  {Number} $z      Position in the z-axis.\n * @see parallax-block\n */\n/**\n * Sets the diameter of the target selector.\n *\n * @param  {Number}  $diameter\n * @param  {Boolean} $oval\n */\n/**\n * Fits dimension to parent container.\n *\n * @param  {Boolean} $w     Specifies whether to fit the width.\n * @param  {Boolean} $h     Specifies whether to fit the height.\n */\n/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\n/**\n * Selector for elements with the vs-controller attribute.\n *\n * @param  {String} $name vs-controller attribute value.\n */\n/**\n * Selector for elements with the vs-instance attribute.\n *\n * @param  {String} $name vs-instance attribute value.\n */\n/**\n * Selects elements with the specified vs-property key and value.\n *\n * @param  {String} $key    vs-property key.\n * @param  {String} $value  vs-property value, if applicable.\n * @param  {String} $scope  Specifies the scope relative to the target selector\n *                          in which this property applies to (any, this, parent, or child).\n */\n/**\n * Binds the content to one/multiple vs-states of the target selector.\n * Option to specify whether the state(s) are default.\n *\n * @param  {List}    $states    List of state names.\n * @param  {Boolean} $default   Specifies whether the class(es) are default.\n */\n/**\n * Binds the content to a vs-style of the target selector.\n * Option to specify whether the style is default.\n *\n * @param  {String}  $style     Style name.\n * @param  {Boolean} $default   Specifies whether the class(es) are default.\n * @param  {String}  $scope     Specifies the scope relative to the target selector\n *                              in which this property applies to (any, this, parent, or child).\n */\n/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\n/**\n * Binds the content to the target selector based on the 'csstransitions' feature\n * (requires Modernizr).\n *\n * @param  {Boolean} $enabled   Specifies whether 'csstransitions' class is required.\n */\n/**\n * Binds the content to the target selector based on the 'cssanimations' feature\n * (requires Modernizr).\n *\n * @param  {Boolean} $enabled   Specifies whether 'cssanimations' class is required.\n */\n/**\n * Binds the content to the target selector based on the 'touch' and 'no-touch' feature\n * (requires Modernizr).\n *\n * @param  {Boolean} $enabled   Specifies whether 'touch' class is required.\n * @param  {Boolean} $exclusive Specifies whether 'no-touch' class is required if\n *                              $enabled is false.\n */\n/**\n * Enables hardware acceleration for containing selector.\n */\n/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\n/**\n * Media query for screens in portrait orientation.\n */\n/**\n * Media query for screens in landscape orientation.\n */\n/**\n * Media query for screens at a specified minimum width.\n *\n * @param  {Number} $minWidth\n */\n/**\n * Media query for screens at a specified maximum width.\n *\n * @param  {Number} $maxWidth\n */\n/**\n * Media query for screens at a specified minimum height.\n *\n * @param  {Number} $minHeight\n */\n/**\n * Media query for screens at a specified maximum height.\n *\n * @param  {Number} $maxHeight\n */\n/**\n * Media query for the minimum width/height threshold of the specified screen type.\n *\n * @param  {String}  $screen        Screen type (i.e. mobile, phablet, tablet, desktop).\n * @param  {Boolean} $exclusive     Specifies whether the media queries should be exclusive to this screen\n *                                  type. If false, the generated media query will use the minimum threshold\n *                                  of the selected screen type. If true, the generated media query will be\n *                                  bounded by the minimum and the maximum thresholds.\n * @param  {Boolean} $invert        Inverts the generated media query.\n * @param  {String}  $measurement   Specifies width or height measurement.\n * @param  {Boolean} $touch         Specifues whether the condition is only valid for touch devices\n *                                  (requires Modernizr feature detection), namely the '.touch' class.\n *                                  If false (default), it does NOT use the '.no-touch' class, but\n *                                  instead applies content normally.\n */\n/**\n * Sets the background-size and background-position of a target element\n * which is using an image map to the corresponding item in the map.\n *\n * @param  {String} $path      Path of sprite map.\n * @param  {Number} $row-index 0-based index of the row of the target item.\n * @param  {Number} $col-index 0-based index of the column of the target item.\n * @param  {Number} $num-rows  Total number of rows in the image map.\n * @param  {Number} $num-cols  Total number of columns in the image map.\n */\n/**\n * Auto generates a list of class names of the target selector, where each\n * class represents a sprite as provided by the sprite map.\n *\n * @param  {String} $path Path of sprite map.\n * @param  {List}   $map  List (1D or 2D) of class names. The position of each list item\n *                        directly corresponds to the sprite position on the sprite map.\n *\n * @note This mixin is quite slow in performance due to the nested loop.\n */\n/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */\n/**\n * 1. Set default font family to sans-serif.\n * 2. Prevent iOS and IE text size adjust after device orientation change,\n *    without disabling user zoom.\n */\nhtml {\n  font-family: sans-serif;\n  /* 1 */\n  -ms-text-size-adjust: 100%;\n  /* 2 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */ }\n\n/**\n * Remove default margin.\n */\nbody {\n  margin: 0; }\n\n/* HTML5 display definitions\n   ========================================================================== */\n/**\n * Correct `block` display not defined for any HTML5 element in IE 8/9.\n * Correct `block` display not defined for `details` or `summary` in IE 10/11\n * and Firefox.\n * Correct `block` display not defined for `main` in IE 11.\n */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block; }\n\n/**\n * 1. Correct `inline-block` display not defined in IE 8/9.\n * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\n */\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block;\n  /* 1 */\n  vertical-align: baseline;\n  /* 2 */ }\n\n/**\n * Prevent modern browsers from displaying `audio` without controls.\n * Remove excess height in iOS 5 devices.\n */\naudio:not([controls]) {\n  display: none;\n  height: 0; }\n\n/**\n * Address `[hidden]` styling not present in IE 8/9/10.\n * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.\n */\n[hidden],\ntemplate {\n  display: none; }\n\n/* Links\n   ========================================================================== */\n/**\n * Remove the gray background color from active links in IE 10.\n */\na {\n  background-color: transparent; }\n\n/**\n * Improve readability of focused elements when they are also in an\n * active/hover state.\n */\na:active,\na:hover {\n  outline: 0; }\n\n/* Text-level semantics\n   ========================================================================== */\n/**\n * Address styling not present in IE 8/9/10/11, Safari, and Chrome.\n */\nabbr[title] {\n  border-bottom: 1px dotted; }\n\n/**\n * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\n */\nb,\nstrong {\n  font-weight: bold; }\n\n/**\n * Address styling not present in Safari and Chrome.\n */\ndfn {\n  font-style: italic; }\n\n/**\n * Address variable `h1` font-size and margin within `section` and `article`\n * contexts in Firefox 4+, Safari, and Chrome.\n */\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0; }\n\n/**\n * Address styling not present in IE 8/9.\n */\nmark {\n  background: #ff0;\n  color: #000; }\n\n/**\n * Address inconsistent and variable font size in all browsers.\n */\nsmall {\n  font-size: 80%; }\n\n/**\n * Prevent `sub` and `sup` affecting `line-height` in all browsers.\n */\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline; }\n\nsup {\n  top: -0.5em; }\n\nsub {\n  bottom: -0.25em; }\n\n/* Embedded content\n   ========================================================================== */\n/**\n * Remove border when inside `a` element in IE 8/9/10.\n */\nimg {\n  border: 0; }\n\n/**\n * Correct overflow not hidden in IE 9/10/11.\n */\nsvg:not(:root) {\n  overflow: hidden; }\n\n/* Grouping content\n   ========================================================================== */\n/**\n * Address margin not present in IE 8/9 and Safari.\n */\nfigure {\n  margin: 1em 40px; }\n\n/**\n * Address differences between Firefox and other browsers.\n */\nhr {\n  box-sizing: content-box;\n  height: 0; }\n\n/**\n * Contain overflow in all browsers.\n */\npre {\n  overflow: auto; }\n\n/**\n * Address odd `em`-unit font size rendering in all browsers.\n */\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em; }\n\n/* Forms\n   ========================================================================== */\n/**\n * Known limitation: by default, Chrome and Safari on OS X allow very limited\n * styling of `select`, unless a `border` property is set.\n */\n/**\n * 1. Correct color not being inherited.\n *    Known issue: affects color of disabled elements.\n * 2. Correct font properties not being inherited.\n * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  color: inherit;\n  /* 1 */\n  font: inherit;\n  /* 2 */\n  margin: 0;\n  /* 3 */ }\n\n/**\n * Address `overflow` set to `hidden` in IE 8/9/10/11.\n */\nbutton {\n  overflow: visible; }\n\n/**\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\n * All other form control elements do not inherit `text-transform` values.\n * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\n * Correct `select` style inheritance in Firefox.\n */\nbutton,\nselect {\n  text-transform: none; }\n\n/**\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\n *    and `video` controls.\n * 2. Correct inability to style clickable `input` types in iOS.\n * 3. Improve usability and consistency of cursor style between image-type\n *    `input` and others.\n */\nbutton,\nhtml input[type=\"button\"], input[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: button;\n  /* 2 */\n  cursor: pointer;\n  /* 3 */ }\n\n/**\n * Re-set default cursor for disabled elements.\n */\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default; }\n\n/**\n * Remove inner padding and border in Firefox 4+.\n */\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0; }\n\n/**\n * Address Firefox 4+ setting `line-height` on `input` using `!important` in\n * the UA stylesheet.\n */\ninput {\n  line-height: normal; }\n\n/**\n * It's recommended that you don't attempt to style these elements.\n * Firefox's implementation doesn't respect box-sizing, padding, or width.\n *\n * 1. Address box sizing set to `content-box` in IE 8/9/10.\n * 2. Remove excess padding in IE 8/9/10.\n */\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */ }\n\n/**\n * Fix the cursor style for Chrome's increment/decrement buttons. For certain\n * `font-size` values of the `input`, it causes the cursor style of the\n * decrement button to change from `default` to `text`.\n */\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto; }\n\n/**\n * 1. Address `appearance` set to `searchfield` in Safari and Chrome.\n * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.\n */\ninput[type=\"search\"] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  box-sizing: content-box;\n  /* 2 */ }\n\n/**\n * Remove inner padding and search cancel button in Safari and Chrome on OS X.\n * Safari (but not Chrome) clips the cancel button when the search input has\n * padding (and `textfield` appearance).\n */\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none; }\n\n/**\n * Define consistent border, margin, and padding.\n */\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em; }\n\n/**\n * 1. Correct `color` not being inherited in IE 8/9/10/11.\n * 2. Remove padding so people aren't caught out if they zero out fieldsets.\n */\nlegend {\n  border: 0;\n  /* 1 */\n  padding: 0;\n  /* 2 */ }\n\n/**\n * Remove default vertical scrollbar in IE 8/9/10/11.\n */\ntextarea {\n  overflow: auto; }\n\n/**\n * Don't inherit the `font-weight` (applied by a rule above).\n * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\n */\noptgroup {\n  font-weight: bold; }\n\n/* Tables\n   ========================================================================== */\n/**\n * Remove most spacing between table cells.\n */\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\ntd,\nth {\n  padding: 0; }\n\n/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\nhtml {\n  width: 100%;\n  height: 100%;\n  font-size: 16px; }\n\nbody {\n  width: 100%;\n  height: 100%;\n  font-size: 100%; }\n\narticle {\n  display: block;\n  position: relative; }\n\naside {\n  display: block;\n  position: relative; }\n\ndetails {\n  display: block;\n  position: relative; }\n\ndialog {\n  display: block;\n  position: relative; }\n\nsummary {\n  display: block;\n  position: relative; }\n\nfooter {\n  display: block;\n  position: relative; }\n\nheader {\n  display: block;\n  position: relative; }\n\nmain {\n  display: block;\n  position: relative; }\n\nfigcaption {\n  display: block;\n  position: relative; }\n\nfigure {\n  display: block;\n  position: relative; }\n\nhgroup {\n  display: block;\n  position: relative; }\n\nnav {\n  display: block;\n  position: relative; }\n\nsection {\n  display: block;\n  position: relative; }\n\ndiv {\n  display: block;\n  position: relative; }\n\ntable {\n  display: block;\n  position: relative; }\n\ntr {\n  display: block;\n  position: relative; }\n\ntd {\n  display: block;\n  position: relative; }\n\nth {\n  display: block;\n  position: relative; }\n\ntbody {\n  display: block;\n  position: relative; }\n\nthead {\n  display: block;\n  position: relative; }\n\ntfoot {\n  display: block;\n  position: relative; }\n\ncol {\n  display: block;\n  position: relative; }\n\na[type='button'] {\n  cursor: pointer; }\n  a[type='button']:disabled {\n    cursor: default; }\n\ninput[type='submit'] {\n  cursor: pointer; }\n  input[type='submit']:disabled {\n    cursor: default; }\n\ninput[type='button'] {\n  cursor: pointer; }\n  input[type='button']:disabled {\n    cursor: default; }\n\ninput[type='checkbox'] {\n  cursor: pointer; }\n  input[type='checkbox']:disabled {\n    cursor: default; }\n\nbutton {\n  cursor: pointer; }\n  button:disabled {\n    cursor: default; }\n\ninput[type='text'] {\n  resize: none; }\n  input[type='text']:focus {\n    outline-width: 0; }\n  input[type='text']:-webkit-autofill {\n    box-shadow: 0 0 0 1000px white inset; }\n\ninput[type='password'] {\n  resize: none; }\n  input[type='password']:focus {\n    outline-width: 0; }\n  input[type='password']:-webkit-autofill {\n    box-shadow: 0 0 0 1000px white inset; }\n\ninput[type='number'] {\n  resize: none; }\n  input[type='number']:focus {\n    outline-width: 0; }\n  input[type='number']:-webkit-autofill {\n    box-shadow: 0 0 0 1000px white inset; }\n\ninput[type='date'] {\n  resize: none; }\n  input[type='date']:focus {\n    outline-width: 0; }\n  input[type='date']:-webkit-autofill {\n    box-shadow: 0 0 0 1000px white inset; }\n\ninput[type='month'] {\n  resize: none; }\n  input[type='month']:focus {\n    outline-width: 0; }\n  input[type='month']:-webkit-autofill {\n    box-shadow: 0 0 0 1000px white inset; }\n\ninput[type='week'] {\n  resize: none; }\n  input[type='week']:focus {\n    outline-width: 0; }\n  input[type='week']:-webkit-autofill {\n    box-shadow: 0 0 0 1000px white inset; }\n\ninput[type='time'] {\n  resize: none; }\n  input[type='time']:focus {\n    outline-width: 0; }\n  input[type='time']:-webkit-autofill {\n    box-shadow: 0 0 0 1000px white inset; }\n\ninput[type='datetime'] {\n  resize: none; }\n  input[type='datetime']:focus {\n    outline-width: 0; }\n  input[type='datetime']:-webkit-autofill {\n    box-shadow: 0 0 0 1000px white inset; }\n\ninput[type='datetime-local'] {\n  resize: none; }\n  input[type='datetime-local']:focus {\n    outline-width: 0; }\n  input[type='datetime-local']:-webkit-autofill {\n    box-shadow: 0 0 0 1000px white inset; }\n\ninput[type='email'] {\n  resize: none; }\n  input[type='email']:focus {\n    outline-width: 0; }\n  input[type='email']:-webkit-autofill {\n    box-shadow: 0 0 0 1000px white inset; }\n\ninput[type='search'] {\n  resize: none; }\n  input[type='search']:focus {\n    outline-width: 0; }\n  input[type='search']:-webkit-autofill {\n    box-shadow: 0 0 0 1000px white inset; }\n\ninput[type='tel'] {\n  resize: none; }\n  input[type='tel']:focus {\n    outline-width: 0; }\n  input[type='tel']:-webkit-autofill {\n    box-shadow: 0 0 0 1000px white inset; }\n\ninput[type='url'] {\n  resize: none; }\n  input[type='url']:focus {\n    outline-width: 0; }\n  input[type='url']:-webkit-autofill {\n    box-shadow: 0 0 0 1000px white inset; }\n\ntextarea {\n  resize: none; }\n  textarea:focus {\n    outline-width: 0; }\n  textarea:-webkit-autofill {\n    box-shadow: 0 0 0 1000px white inset; }\n\nform {\n  position: static; }\n\nhtml, body, article, aside, details, dialog, summary, footer, header, main, figcaption, figure, hgroup, nav, section, div, table, tr, td, th, tbody, thead, tfoot, col, a[type='button'], input[type='submit'], input[type='button'], input[type='checkbox'], button, a, p, li, em, strong, h1, h2, h3, h4, h5, h6, label, span, ul, ol, input[type='text'], input[type='password'], input[type='number'], input[type='date'], input[type='month'], input[type='week'], input[type='time'], input[type='datetime'], input[type='datetime-local'], input[type='email'], input[type='search'], input[type='tel'], input[type='url'], textarea, form {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  outline: none;\n  border: none; }\n\narticle, aside, details, dialog, summary, footer, header, main, figcaption, figure, hgroup, nav, section, div, table, tr, td, th, tbody, thead, tfoot, col, a[type='button'], input[type='submit'], input[type='button'], input[type='checkbox'], button, a, p, li, em, strong, h1, h2, h3, h4, h5, h6, label, span, ul, ol, input[type='text'], input[type='password'], input[type='number'], input[type='date'], input[type='month'], input[type='week'], input[type='time'], input[type='datetime'], input[type='datetime-local'], input[type='email'], input[type='search'], input[type='tel'], input[type='url'], textarea, form {\n  font-weight: normal;\n  text-decoration: none;\n  line-height: normal;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-font-smoothing: antialiased;\n  -webkit-text-stroke: 0;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n  text-size-adjust: 100%; }\n","/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\n\n$font-size-reset: 16px !default;\n$font-size-scale: 100% !default;\n\nhtml {\n  @extend %box-reset;\n  width: 100%;\n  height: 100%;\n  font-size: $font-size-reset;\n}\n\nbody {\n  @extend %box-reset;\n  width: 100%;\n  height: 100%;\n  font-size: $font-size-scale;\n}\n\n@include boxes {\n  @extend %box-reset;\n  @extend %text-reset;\n  display: block;\n  position: relative;\n}\n\n@include buttons {\n  @extend %box-reset;\n  @extend %text-reset;\n  cursor: pointer;\n\n  &:disabled {\n    cursor: default;\n  }\n}\n\n@include labels {\n  @extend %box-reset;\n  @extend %text-reset;\n}\n\n@include lists {\n  @extend %box-reset;\n  @extend %text-reset;\n}\n\n@include textfields {\n  @extend %box-reset;\n  @extend %text-reset;\n  resize: none;\n\n  &:focus {\n    outline-width: 0;\n  }\n\n  &:-webkit-autofill {\n    box-shadow: 0 0 0 1000px white inset;\n  }\n}\n\n@include statics {\n  @extend %box-reset;\n  @extend %text-reset;\n  position: static;\n}\n\n%box-reset {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  outline: none;\n  border: none;\n}\n\n%text-reset {\n  font-weight: normal;\n  text-decoration: none;\n  line-height: normal;\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\n  -webkit-font-smoothing: antialiased;\n  -webkit-text-stroke: 0;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n  text-size-adjust: 100%;\n}\n"],"sourceRoot":"/source/"}