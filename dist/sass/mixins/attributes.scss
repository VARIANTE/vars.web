/**
 *  vars
 *  (c) VARIANTE (http://variante.io)
 *
 *  This software is released under the MIT License:
 *  http://www.opensource.org/licenses/mit-license.php
 */

/**
 * Selector for elements with the vs-controller attribute.
 *
 * @param  {String} $name vs-controller attribute value.
 */
@mixin controller($name)
{
    [data-vs-controller='#{$name}'] { @content; }
    [vs-controller='#{name}'] { @content; }
}

/**
 * Selector for elements with the vs-instance attribute.
 *
 * @param  {String} $name vs-instance attribute value.
 */
@mixin instance($name)
{
    [data-vs-instance='#{$name}'] { @content; }
    [vs-instance='#{name}'] { @content; }
}

/**
 * Selects elements with the specified vs-property key and value.
 *
 * @param  {String}  $key       vs-property key.
 * @param  {String}  $value     vs-property value, if applicable.
 * @param  {Boolean} $descent   Specifies whether the target selector is a child of
 *                              another selector with said property.
 */
@mixin property($key, $value:null, $descent:false)
{
    @if $value == null
    {
        @if $descent == false
        {
            &[data-vs-property-#{$key}] { @content; }
            &[vs-property-#{key}] { @content; }
        }
        @else
        {
            [data-vs-property-#{$key}] & { @content; }
            [vs-property-#{key}] & { @content; }
        }
    }
    @else
    {
        @if $descent == false
        {
            &[data-vs-property-#{$key}='#{$value}'] { @content; }
            &[vs-property-#{key}='#{value}'] { @content; }
        }
        @else
        {
            [data-vs-property-#{$key}='#{$value}'] & { @content; }
            [vs-property-#{key}='#{value}'] & { @content; }
        }
    }
}

/**
 * Binds the content to one/multiple vs-states of the target selector.
 * Option to specify whether the state(s) are default.
 *
 * @param  {List}    $states    List of state names.
 * @param  {Boolean} $default   Specifies whether the class(es) are default.
 */
@mixin state($states, $default:false)
{
    @each $state in $states
    {
        @if $state == 'hover'
        {
            @if $modernizr-enabled == true
            {
                .no-touch &:hover
                {
                    @content;
                }

                .no-touch &[data-vs-state='hover']
                {
                    @content;
                }

                .no-touch &[vs-state='hover']
                {
                    @content;
                }
            }
            @else
            {
                &:hover
                {
                    @content;
                }

                &[data-vs-state='hover']
                {
                    @content;
                }

                &[vs-state='hover']
                {
                    @content;
                }
            }
        }
        @else
        {
            &[data-vs-state='#{$state}']
            {
                @content;
            }

            &[vs-state='#{$state}']
            {
                @content;
            }
        }
    }

    @if $default == true
    {
        @content;
    }
}

/**
 * Binds the content to a vs-style of the target selector.
 * Option to specify whether the style is default.
 *
 * @param  {String}  $style     Style name.
 * @param  {Boolean} $default   Specifies whether the class(es) are default.
 */
@mixin style($style, $default:false)
{
    &[data-vs-style='#{$style}']
    {
        @content;
    }

    &[vs-style='#{$style}']
    {
        @content;
    }

    @if $default == true
    {
        @content;
    }
}
