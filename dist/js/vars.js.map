{
  "version": 3,
  "file": "/Volumes/Developer/VARIANTE/Frameworks/vars.web/dist/js/vars.js",
  "sources": [
    "../../node_modules/almond/almond.js",
    "enums/DirtyType.js",
    "enums.js",
    "utils/assert.js",
    "utils/log.js",
    "events/EventDispatcher.js",
    "events/EventType.js",
    "events.js",
    "math/clamp.js",
    "math.js",
    "ui/changeElementState.js",
    "utils/sizeOf.js",
    "ui/getElementState.js",
    "ui/translate.js",
    "ui/translate3d.js",
    "ui/transform.js",
    "ui/getViewportRect.js",
    "ui/getRect.js",
    "ui/getIntersectRect.js",
    "utils/keyOfValue.js",
    "utils/debounce.js",
    "ui/ElementUpdateDelegate.js",
    "ui/Element.js",
    "utils/inherit.js",
    "ui/Video.js",
    "ui.js",
    "utils/namespace.js",
    "utils/module.js",
    "utils/isNull.js",
    "utils/AssetLoader.js",
    "utils.js",
    "vars.js"
  ],
  "names": [],
  "mappingsjbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA,AD0BA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrlJA,ADmJA;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA,ADwCA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA,ADmEA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChvGA,ADwGA;ACvrJA,ADsJA;ACrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA,AD0CA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA,ADkDA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChgxEA,ADyEA;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA,ADsCA;ACrjoBA,ADkoBA;ACjoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "sourcesContent": [
    "/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"almond\", function(){});\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  UI dirty types.\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'enums/DirtyType',{\n        NONE:        0x00000000,\n        POSITION:    1 << 0,\n        SIZE:        1 << 1,\n        LAYOUT:      1 << 2,\n        STATE:       1 << 3,\n        DATA:        1 << 4,\n        LOCALE:      1 << 5,\n        DEPTH:       1 << 6,\n        CONFIG:      1 << 7,\n        STYLE:       1 << 8,\n        CUSTOM:      1 << 9,\n        ALL:         0xFFFFFFFF\n    }\n);\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  Module of global VARS enums.\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'enums',[\n        'enums/DirtyType'\n    ],\n    function\n    (\n        DirtyType\n    )\n    {\n        var api = function(obj) { return obj; };\n\n        Object.defineProperty(api, 'DirtyType', { value: DirtyType, writable: false, enumerable: true });\n\n        return api;\n    }\n);\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'utils/assert',[\n    ],\n    function\n    (\n    )\n    {\n        /**\n         * Asserts the specified condition and throws a warning if assertion fails.\n         *\n         * @param  {Boolean}    condition   Condition to validate against.\n         * @param  {String}     message     (Optional) Message to be displayed when assertion fails.\n         *\n         * @return {Boolean} True if assert passed, false otherwise.\n         */\n        function assert(condition, message)\n        {\n            if (!condition && (window && window.vars && window.vars.debug))\n            {\n                throw message || '[vars]: Assertion failed.';\n            }\n\n            return condition;\n        }\n\n        return assert;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'utils/log',[\n    ],\n    function\n    (\n    )\n    {\n        /**\n         * Logs to console if debug mode is on.\n         */\n        function log()\n        {\n            if (window && window.vars && window.vars.debug && window.console && console.log)\n            {\n                Function.apply.call(console.log, console, arguments);\n            }\n        }\n\n        return log;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  Event dispatcher object.\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'events/EventDispatcher',[\n        'utils/assert',\n        'utils/log'\n    ],\n    function\n    (\n        assert,\n        log\n    )\n    {\n        /**\n         * @constructor\n         *\n         * Creates a new EventDispatcher instance.\n         */\n        function EventDispatcher(element)\n        {\n            if (this.debug) log('[EventDispatcher]::new(', element, ')');\n        }\n\n        /**\n         * @property\n         *\n         * Specifies whether this EventDispatcher instance generates debug data.\n         *\n         * @type {Object}\n         */\n        Object.defineProperty(EventDispatcher.prototype, 'debug',\n        {\n            get: function()\n            {\n                return this._debug;\n            },\n            set: function(value)\n            {\n                Object.defineProperty(this, '_debug', { value: value, writable: true });\n\n                this.updateDelegate.debug = value;\n            }\n        });\n\n        /**\n         * @public\n         *\n         * Adds an event listener to this EventDispatcher instance.\n         *\n         * @param {String} type\n         * @param {Function} listener\n         */\n        EventDispatcher.prototype.addEventListener = function(type, listener)\n        {\n            assert(type, 'Event type must be specified.');\n            assert(listener, 'Listener must be specified.');\n\n            if (!type) return;\n            if (!listener) return;\n\n            if (this.debug) log('[EventDispatcher]::addEventListener('+type+')');\n\n            if (!this._listenerMap)\n            {\n                Object.defineProperty(this, '_listenerMap', { value: {}, writable: true });\n            }\n\n            if (!this._listenerMap[type])\n            {\n                this._listenerMap[type] = [];\n            }\n\n            this._listenerMap[type].push(listener);\n        };\n\n        /**\n         * @public\n         *\n         * Removes an event listener from this EventDispatcher instance. If no listener method is\n         * specified, all the listeners of the specified type will be removed.\n         *\n         * @param {String} type\n         * @param {Function} listener (Optional)\n         */\n        EventDispatcher.prototype.removeEventListener = function(type, listener)\n        {\n            assert(type, 'Event type must be specified.');\n            assert(this._listenerMap, 'Listener map is null.');\n            assert(this._listenerMap[type], 'There are no listeners registered for event type: ' + type);\n\n            if (!type) return;\n            if (!this._listenerMap) return;\n            if (!this._listenerMap[type]) return;\n\n            if (this.debug) log('[EventDispatcher]::removeEventListener('+type+')');\n\n            if (listener)\n            {\n                var index = this._listenerMap[type].indexOf(listener);\n\n                if (index > -1)\n                {\n                    this._listenerMap[type].splice(index, 1);\n                }\n            }\n            else\n            {\n                delete this._listenerMap[type];\n            }\n        };\n\n        /**\n         * @public\n         *\n         * Determines whether this EventDispatcher instance has a specific event listener registered.\n         * If no listener is specified, it will check if any listener of the specified event type\n         * is registered.\n         *\n         * @param {String} type\n         * @param {Function} listener (Optional)\n         *\n         * @return {Boolean}\n         */\n        EventDispatcher.prototype.hasEventListener = function(type, listener)\n        {\n            assert(type, 'Event type must be specified.');\n            assert(this._listenerMap, 'Listener map is null.');\n            assert(this._listenerMap[type], 'There are no listeners registered for event type: ' + type);\n\n            if (!type) return false;\n            if (!this._listenerMap) return false;\n            if (!this._listenerMap[type]) return false;\n\n            if (listener)\n            {\n                var index = this._listenerMap[type].indexOf(listener);\n\n                return (index > -1);\n            }\n            else\n            {\n                return true;\n            }\n        };\n\n        /**\n         * @public\n         *\n         * Dispatches the specified event.\n         *\n         * @param  {String} event\n         */\n        EventDispatcher.prototype.dispatchEvent = function(event)\n        {\n            assert(event, 'Event must be specified.');\n            assert(this._listenerMap, 'Listener map is null.');\n\n            if (!event) return;\n            if (!this._listenerMap) return false;\n            if (!this._listenerMap[event.type]) return false;\n\n            if (this.debug) log('[EventDispatcher]::dispatchEvent('+event.type+')');\n\n            event.target = this;\n            event.currentTarget = this;\n            event.customTarget = this;\n\n            var arrlen = this._listenerMap[event.type].length;\n\n            for (var i = 0; i < arrlen; i++)\n            {\n                var listener = this._listenerMap[event.type][i];\n\n                listener.call(this, event);\n            }\n        };\n\n        return EventDispatcher;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  VARS supported event types.\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'events/EventType',{\n        /**\n         * DOM native events.\n         *\n         * @see http://www.w3schools.com/jsref/dom_obj_event.asp\n         */\n        MOUSE:\n        {\n            CLICK:        'click',\n            CONTEXT_MENU: 'contextmenu',\n            DOUBLE_CLICK: 'dblclick',\n            MOUSE_DOWN:   'mousedown',\n            MOUSE_ENTER:  'mouseenter',\n            MOUSE_LEAVE:  'mouseleave',\n            MOUSE_MOVE:   'mousemove',\n            MOUSE_OVER:   'mouseover',\n            MOUSE_OUT:    'mouseout',\n            MOUSE_UP:     'mouseup'\n        },\n        KEYBOARD:\n        {\n            KEY_DOWN:  'keydown',\n            KEY_PRESS: 'keypress',\n            KEY_UP:    'keyup'\n        },\n        OBJECT:\n        {\n            ABORT:         'abort',\n            BEFORE_UNLOAD: 'beforeunload',\n            ERROR:         'error',\n            HASH_CHANGE:   'hashchange',\n            LOAD:          'load',\n            PAGE_SHOW:     'pageshow',\n            PAGE_HIDE:     'pagehide',\n            RESIZE:        'resize',\n            SCROLL:        'scroll',\n            UNLOAD:        'unload',\n            PROGRESS:      'progress' // custom\n        },\n        FORM:\n        {\n            BLUR:      'blur',\n            CHANGE:    'change',\n            FOCUS:     'focus',\n            FOCUS_IN:  'focusin',\n            FOCUS_OUT: 'focusout',\n            INPUT:     'input',\n            INVALID:   'invalid',\n            RESET:     'reset',\n            SEARCH:    'search',\n            SELECT:    'select',\n            SUBMIT:    'submit'\n        },\n        DRAG:\n        {\n            DRAG:       'drag',\n            DRAG_END:   'dragend',\n            DRAG_ENTER: 'dragenter',\n            DRAG_LEAVE: 'dragleave',\n            DRAG_OVER:  'dragover',\n            DRAG_START: 'dragstart',\n            DROP:       'drop'\n        },\n        CLIPBOARD:\n        {\n            COPY:  'copy',\n            CUT:   'cut',\n            PASTE: 'paste'\n        },\n        PRINT:\n        {\n            AFTER_PRINT:  'afterprint',\n            BEFORE_PRINT: 'beforeprint'\n        },\n        MEDIA:\n        {\n            ABORT:            'abort',\n            CAN_PLAY:         'canplay',\n            CAN_PLAY_THROUGH: 'canplaythrough',\n            DURATION_CHANGE:  'durationchange',\n            EMPTIED:          'emptied',\n            ENDED:            'ended',\n            ERROR:            'error',\n            LOADED_DATA:      'loadeddata',\n            LOADED_METADATA:  'loadedmetadata',\n            LOAD_START:       'loadstart',\n            PAUSE:            'pause',\n            PLAY:             'play',\n            PLAYING:          'playing',\n            PROGRESS:         'progress',\n            RATE_CHANGE:      'ratechange',\n            SEEKED:           'seeked',\n            SEEKING:          'seeking',\n            STALLED:          'stalled',\n            SUSPEND:          'suspend',\n            TIME_UPDATE:      'timeupdate',\n            VOLUME_CHANGE:    'volumechange',\n            WAITING:          'waiting'\n        },\n        ANIMATION:\n        {\n            ANIMATION_END:       'animationend',\n            ANIMATION_ITERATION: 'animationiteration',\n            ANIMATION_START:     'animationstart'\n        },\n        TRANSITION:\n        {\n            TRANSITION_END: 'transitionend'\n        },\n        SERVER_SENT:\n        {\n            ERROR:   'error',\n            MESSAGE: 'message',\n            OPEN:    'open'\n        },\n        MISC:\n        {\n            MESSAGE:   'message',\n            ONLINE:    'online',\n            OFFLINE:   'offline',\n            POP_STATE: 'popstate',\n            SHOW:      'show',\n            STORAGE:   'storage',\n            TOGGLE:    'toggle',\n            WHEEL:     'wheel'\n        },\n        TOUCH:\n        {\n            TOUCH_CANCEL: 'touchcancel',\n            TOUCH_END:    'touchend',\n            TOUCH_MOVE:   'touchmove',\n            TOUCH_START:  'touchstart'\n        }\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  Module of methods/classes related to the native event system.\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'events',[\n        'events/EventDispatcher',\n        'events/EventType'\n    ],\n    function\n    (\n        EventDispatcher,\n        EventType\n    )\n    {\n        var api = function(obj) { return obj; };\n\n        Object.defineProperty(api, 'EventDispatcher', { value: EventDispatcher, writable: false, enumerable: true });\n        Object.defineProperty(api, 'EventType', { value: EventType, writable: false, enumerable: true });\n\n        return api;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'math/clamp',[\n    ],\n    function\n    (\n    )\n    {\n        /**\n         * Clamps a value to a min and max value.\n         *\n         * @param  {Number} value\n         * @param  {Number} min\n         * @param  {Number} max\n         *\n         * @return {Number} The clamped value.\n         */\n        function clamp(value, min, max)\n        {\n            if ((typeof value !== 'number') || (typeof min !== 'number') || (typeof max !== 'number')) return NaN;\n\n            var output = value;\n\n            output = Math.min(output, max);\n            output = Math.max(output, min);\n\n            return output;\n        }\n\n        return clamp;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  Module of methods/classes related to math.\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'math',[\n        'math/clamp'\n    ],\n    function\n    (\n        clamp\n    )\n    {\n        var api = function(obj) { return obj; };\n\n        Object.defineProperty(api, 'clamp', { value: clamp, writable: false, enumerable: true });\n\n        return api;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'ui/changeElementState',[\n        'utils/assert'\n    ],\n    function\n    (\n        assert\n    )\n    {\n        /**\n         * Changes the state of a DOM element, assumes that state classes\n         * are prefixed with 'state-'.\n         *\n         * @param  {Object} element\n         * @param  {String} state\n         */\n        function changeElementState(element, state)\n        {\n            if (!assert((element) && (element instanceof HTMLElement), 'Invalid element specified. Element must be an instance of HTMLElement')) return;\n            if (element.classList.contains('state'+state)) return;\n\n            element.className = element.className.replace(/(^|\\s)state-\\S+/g, '');\n            element.classList.add('state-'+state);\n        }\n\n        return changeElementState;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'utils/sizeOf',[\n    ],\n    function\n    (\n    )\n    {\n        /**\n         * Gets the number of keys in a given object.\n         *\n         * @param  {*} object   Any object type.\n         *\n         * @return {Number} Size of specified object (depending on the object type,\n         *                  it can be the number of keys in a plain object, number\n         *                  of elements in an array, number of characters in a\n         *                  string, number of digits in a number, and 0 for all\n         *                  other types.\n         */\n        function sizeOf(object)\n        {\n            if (object === undefined || object === null) return 0;\n            \n            // If object internally has length property, use it.\n            if (object.length !== undefined) return object.length;\n\n            var size = 0;\n\n            switch (typeof object)\n            {\n                case 'object':\n                {\n                    if (object !== null && object !== undefined)\n                    {\n                        for (var k in object) size++;\n                    }\n\n                    break;\n                }\n\n                case 'number':\n                {\n                    size = ('' + object).length;\n                    break;\n                }\n\n                default:\n                {\n                    size = 0;\n                    break;\n                }\n            }\n\n            return size;\n        }\n\n        return sizeOf;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'ui/getElementState',[\n        'utils/assert',\n        'utils/sizeOf'\n    ],\n    function\n    (\n        assert,\n        sizeOf\n    )\n    {\n        /**\n         * Gets the state of a DOM element, assumes that state classes\n         * are prefixed with 'state-'.\n         *\n         * @param  {Object} element\n         */\n        function getElementState(element)\n        {\n            if (!assert((element) && (element instanceof HTMLElement), 'Invalid element specified. Element must be an instance of HTMLElement')) return null;\n\n            var s = element.className.match(/(^|\\s)state-\\S+/g);\n            var n = sizeOf(s);\n\n            if (!assert(n <= 1, 'Multiple states detected.')) return null;\n\n            if (n < 1)\n            {\n                return null;\n            }\n            else\n            {\n                return s[0].replace('state-', '');\n            }\n        }\n\n        return getElementState;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'ui/translate',[\n        'utils/assert'\n    ],\n    function\n    (\n        assert\n    )\n    {\n        /**\n         * Translates a DOM element.\n         *\n         * @param  {Object} element     Target DOM element\n         * @param  {Object} properties  Translation properties:\n         *                              {\n         *                                  {Number} top:    Top translation value\n         *                                  {Number} right:  Right translation value\n         *                                  {Number} bottom: Bottom translation value\n         *                                  {Number} left:   Left translation value\n         *                                  {String} units:  Unit of translation values\n         *                              }\n         *                              (if unspecified, all translation values will be reset to 'initial')\n         * @param  {Object} constraints Translation constraints:\n         *                              {\n         *                                  {Number} top:    Bounded top translation value\n         *                                  {Number} right:  Bounded right translation value\n         *                                  {Number} bottom: Bounded bottom translation value\n         *                                  {Number} left:   Bounded left translation value\n         *                              }\n         *\n         * @return {Object} Translated properties.\n         */\n        function translate(element, properties, constraints)\n        {\n            if (properties)\n            {\n                if (!assert(!properties.top || !isNaN(properties.top), 'Top property must be a number.')) return null;\n                if (!assert(!properties.right || !isNaN(properties.right), 'Right property must be a number.')) return null;\n                if (!assert(!properties.bottom || !isNaN(properties.bottom), 'Bottom property must be a number.')) return null;\n                if (!assert(!properties.left || !isNaN(properties.left), 'Left property must be a number.')) return null;\n\n                var units = properties.units || 'px';\n\n                if (constraints)\n                {\n                    if (!assert(!constraints.top || !isNaN(constraints.top), 'Top constraint must be a number.')) return null;\n                    if (!assert(!constraints.right || !isNaN(constraints.right), 'Right constraint must be a number.')) return null;\n                    if (!assert(!constraints.bottom || !isNaN(constraints.bottom), 'Bottom constraint must be a number.')) return null;\n                    if (!assert(!constraints.left || !isNaN(constraints.left), 'Left constraint must be a number.')) return null;\n                }\n\n                var top = (constraints && constraints.top) ? Math.min(properties.top, constraints.top) : properties.top;\n                var right = (constraints && constraints.right) ? Math.min(properties.right, constraints.right) : properties.right;\n                var bottom = (constraints && constraints.bottom) ? Math.min(properties.bottom, constraints.bottom) : properties.bottom;\n                var left = (constraints && constraints.left) ? Math.min(properties.left, constraints.left) : properties.left;\n\n                if (element)\n                {\n                    if (element.style)\n                    {\n                        element.style.top = String(top) + units;\n                        element.style.right = String(right) + units;\n                        element.style.bottom = String(bottom) + units;\n                        element.style.left = String(left) + units;\n                    }\n                    else if (element.css)\n                    {\n                        element.css({ 'top': String(top) + units });\n                        element.css({ 'right': String(right) + units });\n                        element.css({ 'bottom': String(bottom) + units });\n                        element.css({ 'left': String(left) + units });\n                    }\n                }\n\n                return { top: top, right: right, bottom: bottom, left: left };\n            }\n            else\n            {\n                if (element)\n                {\n                    if (element.style)\n                    {\n                        element.style.top = 'initial';\n                        element.style.right = 'initial';\n                        element.style.bottom = 'initial';\n                        element.style.left = 'initial';\n                    }\n                    else if (element.css)\n                    {\n                        element.css({ 'top': 'initial' });\n                        element.css({ 'right': 'initial' });\n                        element.css({ 'bottom': 'initial' });\n                        element.css({ 'left': 'initial' });\n                    }\n                }\n\n                return { top: 'initial', right: 'initial', bottom: 'initial', left: 'initial' };\n            }\n        }\n\n        return translate;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'ui/translate3d',[\n        'utils/assert'\n    ],\n    function\n    (\n        assert\n    )\n    {\n        /**\n         * Translates a DOM element.\n         *\n         * @param  {Object} element     Target DOM element\n         * @param  {Object} properties  Translation properties: x/y/z/units\n         *                              {\n         *                                  {Number} x:     X-coordinate\n         *                                  {Number} y:     Y-coordinate\n         *                                  {Number} z:     Z-coordinate\n         *                                  {String} units: Unit of translation values\n         *                              }\n         *                              (if unspecified, all translation coordinates will be reset to 0)\n         * @param  {Object} constraints Translation constraints:\n         *                              {\n         *                                  {Number} x:     Bounded x-coordinate\n         *                                  {Number} y:     Bounded y-coordinate\n         *                                  {Number} z:     Bounded z-coordinate\n         *                              }\n         *\n         * @return {Object} Translated properties.\n         */\n        function translate3d(element, properties, constraints)\n        {\n            if (properties)\n            {\n                if (!assert(!properties.x || !isNaN(properties.x), 'X property must be a number.')) return null;\n                if (!assert(!properties.y || !isNaN(properties.y), 'Y property must be a number.')) return null;\n                if (!assert(!properties.z || !isNaN(properties.z), 'Z property must be a number.')) return null;\n\n                var units = properties.units || 'px';\n\n                if (constraints)\n                {\n                    if (!assert(!constraints.x || !isNaN(constraints.x), 'X constraint must be a number.')) return null;\n                    if (!assert(!constraints.y || !isNaN(constraints.y), 'Y constraint must be a number.')) return null;\n                    if (!assert(!constraints.z || !isNaN(constraints.z), 'Z constraint must be a number.')) return null;\n                }\n\n                var x = (constraints && constraints.x) ? Math.min(properties.x, constraints.x) : properties.x;\n                var y = (constraints && constraints.y) ? Math.min(properties.y, constraints.y) : properties.y;\n                var z = (constraints && constraints.z) ? Math.min(properties.z, constraints.z) : properties.z;\n\n                if (element)\n                {\n                    var translateX = properties.x ? 'translateX('+x+units+')' : null;\n                    var translateY = properties.y ? 'translateY('+y+units+')' : null;\n                    var translateZ = properties.z ? 'translateZ('+z+units+')' : null;\n                    var transforms = '';\n\n                    if (translateX) transforms += (transforms === '') ? translateX : ' ' + translateX;\n                    if (translateY) transforms += (transforms === '') ? translateY : ' ' + translateY;\n                    if (translateZ) transforms += (transforms === '') ? translateZ : ' ' + translateZ;\n\n                    if (element.style)\n                    {\n                        element.style.transform = (transforms);\n                    }\n                    else if (element.css)\n                    {\n                        element.css('transform', transforms);\n                    }\n                }\n\n                return { x: x, y: y, z: z };\n            }\n            else\n            {\n                if (element)\n                {\n                    if (element.style)\n                    {\n                        element.style.transform = 'translateX(0) translateY(0) translateZ(0)';\n                    }\n                    else if (element.css)\n                    {\n                        element.css({ 'transform': 'translateX(0) translateY(0) translateZ(0)' });\n                    }\n                }\n\n                return { x: 0, y: 0, z: 0 };\n            }\n        }\n\n        return translate3d;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'ui/transform',[\n        'utils/assert'\n    ],\n    function\n    (\n        assert\n    )\n    {\n        /**\n         * Transforms a DOM element.\n         *\n         * @param  {Object} element     Target DOM element.\n         * @param  {Object} properties  Transformation properties:\n         *                              {\n         *                                  {Number} width:  Target width of the element\n         *                                  {Number} height: Target height of the element\n         *                                  {String} unit:   Unit of width/height values\n         *                                  {String} type:   Resizing constraint: 'default', 'contain', 'cover'\n         *                              }\n         *                              (if unspecified, all transformation styles will be reset to 'initial')\n         * @param  {Object} constraints Transformation constraints:\n         *                              {\n         *                                  {Number} width:  Bounded width of the element.\n         *                                  {Number} height: Bounded height of the element.\n         *                              }\n         *\n         * @return {Object} Transformed properties.\n         */\n        function transform(element, properties, constraints)\n        {\n            if (properties)\n            {\n                if (!assert(!properties.width || !isNaN(properties.width), 'Width property must be a number.')) return null;\n                if (!assert(!properties.height || !isNaN(properties.height), 'Height property must be a number.')) return null;\n                if (!assert(!properties.aspectRatio || !isNaN(properties.aspectRatio), 'Aspect ratio property must be a number.')) return null;\n\n                var units = properties.units || 'px';\n                var aspectRatio = (properties.aspectRatio) ? Number(properties.aspectRatio) : properties.width/properties.height;\n                var maxW = properties.width;\n                var maxH = properties.height;\n                var minW = properties.width;\n                var minH = properties.height;\n                var type = properties.type || 'default';\n\n                if (constraints && type !== 'default')\n                {\n                    assert(!constraints.width || !isNaN(constraints.width), 'Width constraint must be a number.');\n                    assert(!constraints.height || !isNaN(constraints.height), 'Height constraint must be a number.');\n\n                    if (type && type === 'cover')\n                    {\n                        if (constraints.width) minW = Math.min(constraints.width, minW);\n                        if (constraints.width) minH = Math.min(constraints.height, minH);\n                    }\n                    else\n                    {\n                        if (constraints.width) maxW = Math.min(constraints.width, maxW);\n                        if (constraints.height) maxH = Math.min(constraints.height, maxH);\n                    }\n                }\n\n                var w, h;\n\n                if (type === 'contain')\n                {\n                    w = (maxW > maxH) ? maxH * aspectRatio : maxW;\n                    h = (maxW > maxH) ? maxH : maxW / aspectRatio;\n\n                    if (w > maxW)\n                    {\n                        w = maxW;\n                        h = w / aspectRatio;\n                    }\n                    else if (h > maxH)\n                    {\n                        h = maxH;\n                        w = h * aspectRatio;\n                    }\n                }\n                else if (type == 'cover')\n                {\n                    w = (minW > minH) ? minH * aspectRatio : minW;\n                    h = (minW > minH) ? minH : minW / aspectRatio;\n\n                    if (w < minW)\n                    {\n                        w = minW;\n                        h = w / aspectRatio;\n                    }\n                    else if (h < minH)\n                    {\n                        h = minH;\n                        w = h * aspectRatio;\n                    }\n                }\n                else\n                {\n                    w = maxW;\n                    h = maxH;\n                }\n\n                if (element)\n                {\n                    if (element.style)\n                    {\n                        if (properties.width) element.style.width = String(w) + units;\n                        if (properties.height) element.style.height = String(h) + units;\n                    }\n                    else if (element.css)\n                    {\n                        if (properties.width) element.css({ 'width': String(w) + units });\n                        if (properties.height) element.css({ 'height': String(h) + units });\n                    }\n                }\n\n                return { width: w, height: h };\n            }\n            else\n            {\n                if (element)\n                {\n                    if (element.style)\n                    {\n                        element.style.width = 'initial';\n                        element.style.height = 'initial';\n                    }\n                    else if (element.css)\n                    {\n                        element.css({ 'width': 'initial' });\n                        element.css({ 'height': 'initial' });\n                    }\n                }\n\n                return { width: 'initial', height: 'initial' };\n            }\n        }\n\n        return transform;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'ui/getViewportRect',[\n        'utils/assert'\n    ],\n    function\n    (\n        assert\n    )\n    {\n        /**\n         * Gets the rect of the viewport (FOV).\n         *\n         * @return {Object} Object containing top, left, bottom, right, width, height.\n         */\n        function getViewportRect()\n        {\n            if (!assert(window && document, 'Window or document undefined.')) return null;\n\n            var rect = {};\n\n            rect.width  = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n            rect.height = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n            rect.top    = (window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n            rect.left   = (window.pageXOffset !== undefined) ? window.pageXOffset : (document.documentElement || document.body.parentNode || document.body).scrollLeft;\n            rect.bottom = rect.top + rect.height;\n            rect.right  = rect.left + rect.width;\n\n            return rect;\n        }\n\n        return getViewportRect;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'ui/getRect',[\n        'utils/assert',\n        'ui/getViewportRect'\n    ],\n    function\n    (\n        assert,\n        getViewportRect\n    )\n    {\n        /**\n         * Gets the rect of a given element.\n         *\n         * @param  {Object} element\n         *\n         * @return {Object} Object containing top, left, bottom, right, width, height.\n         */\n        function getRect(element)\n        {\n            if (!assert(element, 'Invalid element specified.')) return null;\n            if (!assert(window && document, 'Window or document undefined.')) return null;\n\n            if (element === window) return getViewportRect();\n\n            var fov = getViewportRect();\n            var rect = {};\n\n            rect.width  = (element.outerWidth) ? element.outerWidth() : element.getBoundingClientRect().width;\n            rect.height = (element.outerHeight) ? element.outerHeight() : element.getBoundingClientRect().height;\n            rect.top    = (element.offset) ? element.offset().top : element.getBoundingClientRect().top + fov.top;\n            rect.left   = (element.offset) ? element.offset().left : element.getBoundingClientRect().left + fov.left;\n            rect.bottom = rect.top + rect.height;\n            rect.right  = rect.left + rect.width;\n\n            return rect;\n        }\n\n        return getRect;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'ui/getIntersectRect',[\n        'utils/assert',\n        'ui/getRect'\n    ],\n    function\n    (\n        assert,\n        getRect\n    )\n    {\n        /**\n         * Computes the intersecting rect of 2 given elements. If only 1 element is specified, the other\n         * element will default to the current viewport.\n         *\n         * @param  {Object} element1\n         * @param  {Object} element2\n         *\n         * @return {Object} Object containing width, height.\n         */\n        function getIntersectRect(element1, element2)\n        {\n            if (!assert(element1 || element2, 'Invalid elements specified.')) return null;\n            if (!assert(window && document, 'Window or document undefined.')) return null;\n\n            var rect1 = getRect(element1 || window);\n            var rect2 = getRect(element2 || window);\n\n            if (!rect1 || !rect2) return null;\n\n            var rect = {};\n\n            rect.width  = Math.max(0.0, Math.min(rect1.right, rect2.right) - Math.max(rect1.left, rect2.left));\n            rect.height = Math.max(0.0, Math.min(rect1.bottom, rect2.bottom) - Math.max(rect1.top, rect2.top));\n            rect.top    = Math.max(rect1.top, rect2.top);\n            rect.left   = Math.max(rect1.left, rect2.left);\n            rect.bottom = rect.top + rect.height;\n            rect.right  = rect.left + rect.width;\n\n            if (rect.width*rect.height === 0)\n            {\n                rect.width  = 0;\n                rect.height = 0;\n                rect.top    = 0;\n                rect.left   = 0;\n                rect.bottom = 0;\n                rect.right  = 0;\n            }\n\n            return rect;\n        }\n\n        return getIntersectRect;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'utils/keyOfValue',[\n    ],\n    function\n    (\n    )\n    {\n        /**\n         * Gets the key of a given value in a given object.\n         *\n         * @param  {Object} object  Target object.\n         * @param  {Value}  value   Target value.\n         */\n        function keyOfValue(object, value)\n        {\n            if (!object || !value) return null;\n            if (typeof object !== 'object') return null;\n\n            for (var property in object)\n            {\n                if (object.hasOwnProperty(property))\n                {\n                    if (object[property] === value)\n                    {\n                        return property;\n                    }\n                }\n            }\n\n            return null;\n        }\n\n        return keyOfValue;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'utils/debounce',[\n    ],\n    function\n    (\n    )\n    {\n        /**\n         * Returns a function, that, as long as it continues to be invoked, will not\n         * be triggered. The function will be called after it stops being called for\n         * N milliseconds. If 'immediate' is passed, trigger the function on the\n         * leading edge, instead of the trailing.\n         *\n         * @param  {Function}   method      Method to be debounced.\n         * @param  {Number}     delay       Debounce rate in milliseconds.\n         * @param  {Boolean}    immediate   (Optional) Indicates whether the method is triggered\n         *                                  on the leading edge instead of the trailing.\n         *\n         * @return {Function} The debounced method.\n         */\n        function debounce(method, delay, immediate)\n        {\n            var timeout;\n\n            return function()\n            {\n                var context = this;\n                var args = arguments;\n\n                var later = function()\n                {\n                    timeout = null;\n\n                    if (!immediate)\n                    {\n                        method.apply(context, args);\n                    }\n                };\n\n                var callNow = immediate && !timeout;\n                clearTimeout(timeout);\n                timeout = setTimeout(later, delay);\n\n                if (callNow)\n                {\n                    method.apply(context, args);\n                }\n            };\n        }\n\n        return debounce;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  Delegate for managing update calls of a VARS modeled element.\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'ui/ElementUpdateDelegate',[\n        'utils/assert',\n        'utils/debounce',\n        'utils/log',\n        'enums/DirtyType'\n    ],\n    function\n    (\n        assert,\n        debounce,\n        log,\n        DirtyType\n    )\n    {\n        /**\n         * @static\n         *\n         * Default refresh (debounce) rate in milliseconds.\n         *\n         * @type {Number}\n         */\n        var DEFAULT_REFRESH_RATE = 0.0;\n\n        /**\n         * @constructor\n         *\n         * Creates a new ElementUpdateDelegate instance.\n         */\n        function ElementUpdateDelegate(delegate)\n        {\n            if (this.debug) log('[ElementUpdateDelegate]::new(', delegate, ')');\n\n            var mDirtyTable = 0;\n            var mResizeHandler = null;\n            var mScrollHandler = null;\n\n            this.delegate = delegate;\n\n            /**\n             * @privileged\n             *\n             * Sets a dirty type as dirty.\n             *\n             * @param {Number} dirtyType\n             */\n            this.setDirty = function(dirtyType, validateNow)\n            {\n                if (this.debug) log('[ElementUpdateDelegate]::setDirty(', dirtyType, validateNow, ')');\n\n                if (this.transmissive !== DirtyType.NONE)\n                {\n                    if (this.delegate.virtualChildren)\n                    {\n                        for (var name in this.delegate.virtualChildren)\n                        {\n                            var child = this.delegate.virtualChildren[name];\n\n                            if (child.updateDelegate && child.updateDelegate.setDirty)\n                            {\n                                var transmitted = dirtyType & child.updateDelegate.receptive;\n\n                                if (transmitted !== DirtyType.NONE)\n                                {\n                                    child.updateDelegate.setDirty(transmitted, validateNow);\n                                }\n                            }\n                        }\n                    }\n                }\n\n                if (this.isDirty(dirtyType) && !validateNow)\n                {\n                    return;\n                }\n\n                switch (dirtyType)\n                {\n                    case DirtyType.NONE:\n                    case DirtyType.ALL:\n                    {\n                        mDirtyTable = dirtyType;\n                        break;\n                    }\n\n                    default:\n                    {\n                        mDirtyTable |= dirtyType;\n                        break;\n                    }\n                }\n\n                if (validateNow)\n                {\n                    this.update();\n                }\n                else if (!this._pendingAnimationFrame)\n                {\n                    this._pendingAnimationFrame = _requestAnimationFrame(this.update.bind(this));\n                }\n            };\n\n            /**\n             * @privileged\n             *\n             * Checks dirty status of a given dirty type.\n             *\n             * @param  {Number}  dirtyType [description]\n             *\n             * @return {Boolean}\n             */\n            this.isDirty = function(dirtyType)\n            {\n                if (this.debug) log('[ElementUpdateDelegate]::isDirty(', dirtyType, mDirtyTable, ')');\n\n                switch (dirtyType)\n                {\n                    case DirtyType.NONE:\n                    case DirtyType.ALL:\n                    {\n                        return (mDirtyTable == dirtyType);\n                    }\n\n                    default:\n                    {\n                        return ((dirtyType & mDirtyTable) !== 0);\n                    }\n                }\n            };\n\n            /**\n             * @privileged\n             *\n             * Initializes this ElementUpdateDelegate instance. Must manually invoke.\n             */\n            this.init = function()\n            {\n                if (this.debug) log('[ElementUpdateDelegate]::init()');\n\n                var r = this.conductor || window;\n\n                if (window && r && r.addEventListener && this.responsive)\n                {\n                    if (this.refreshRate === 0.0)\n                    {\n                        mResizeHandler = _onWindowResize.bind(this);\n                        mScrollHandler = _onWindowScroll.bind(this);\n                    }\n                    else\n                    {\n                        mResizeHandler = debounce(_onWindowResize.bind(this), this.refreshRate);\n                        mScrollHandler = debounce(_onWindowScroll.bind(this), this.refreshRate);\n                    }\n\n                    window.addEventListener('resize', mResizeHandler);\n                    window.addEventListener('orientationchange', mResizeHandler);\n                    r.addEventListener('scroll', mScrollHandler);\n                }\n\n                this.setDirty(DirtyType.ALL);\n            };\n\n            /**\n             * @privileged\n             *\n             * Destroys this ElementUpdateDelegate instance.\n             */\n            this.destroy = function()\n            {\n                if (this.debug) log('[ElementUpdateDelegate]::destroy()');\n\n                _cancelAnimationFrame();\n\n                var r = this.conductor || window;\n\n                if (window && r && r.removeEventListener && this.responsive)\n                {\n                    window.removeEventListener('resize', mResizeHandler);\n                    window.removeEventListener('orientationchange', mResizeHandler);\n                    r.removeEventListener('scroll', mScrollHandler);\n                }\n\n                mResizeHandler = null;\n                mScrollHandler = null;\n            };\n\n            /**\n             * @privileged\n             *\n             * Handler invoked whenever a visual update is required.\n             */\n            this.update = function()\n            {\n                if (this.debug) log('[ElementUpdateDelegate]::update()');\n\n                _cancelAnimationFrame(this._pendingAnimationFrame);\n\n                if (this.delegate && this.delegate.update)\n                {\n                    this.delegate.update.call(this.delegate, mDirtyTable);\n                }\n\n                // Reset the dirty status of all types.\n                this.setDirty(0);\n\n                this._pendingAnimationFrame = null;\n            };\n\n            /**\n             * @private\n             *\n             * Custom requestAnimationFrame implementation.\n             *\n             * @param  {Function} callback\n             */\n            var _requestAnimationFrame = function(callback)\n            {\n                var raf = window && (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame) || null;\n\n                if (!raf)\n                {\n                    raf = function(callback)\n                    {\n                        if (window)\n                        {\n                            return window.setTimeout(callback, 10.0);\n                        }\n                        else\n                        {\n                            return null;\n                        }\n                    };\n                }\n\n                return raf(callback);\n            };\n\n            /**\n             * @private\n             *\n             * Custom cancelAnimationFrame implementation.\n             *\n             * @return {Function} callback\n             */\n            var _cancelAnimationFrame = function(callback)\n            {\n                var caf = window && (window.requestAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame) || null;\n\n                if (!caf)\n                {\n                    caf = function(callback)\n                    {\n                        if (window)\n                        {\n                            return window.clearTimeout(callback);\n                        }\n                        else\n                        {\n                            return null;\n                        }\n                    };\n                }\n\n                return caf;\n            };\n\n            /**\n             * @private\n             *\n             * Handler invoked when the window resizes.\n             *\n             * @param  {Object} event\n             */\n            var _onWindowResize = function(event)\n            {\n                this.setDirty(DirtyType.SIZE);\n            };\n\n            /**\n             * @private\n             *\n             * Handler invoked when the window scrolls.\n             *\n             * @param  {Object} event\n             */\n            var _onWindowScroll = function(event)\n            {\n                this.setDirty(DirtyType.POSITION);\n            };\n        }\n\n        /**\n         * @property\n         *\n         * Indicates whether this ElementUpdateDelegate instance generates debug data.\n         *\n         * @type {Object}\n         */\n        Object.defineProperty(ElementUpdateDelegate.prototype, 'debug', { value: false, writable: true });\n\n        /**\n         * @property\n         *\n         * Delegate of this ElementUpdateDelegate instance.\n         *\n         * @type {Object}\n         */\n        Object.defineProperty(ElementUpdateDelegate.prototype, 'delegate', { value: null, writable: true });\n\n        /**\n         * @property\n         *\n         * Indicates whether this ElementUpdateDelegate auto responds to window behaviors.\n         *\n         * @type {Boolean}\n         */\n        Object.defineProperty(ElementUpdateDelegate.prototype, 'responsive', { value: false, writable: true });\n\n        /**\n         * @property\n         *\n         * Indicates the debounce rate of this ElementUpdateDelegate instance.\n         *\n         * @type {Number}\n         */\n        Object.defineProperty(ElementUpdateDelegate.prototype, 'refreshRate', { value: DEFAULT_REFRESH_RATE, writable: true });\n\n        /**\n         * @property\n         *\n         * Indicates the dirty flags in which ElementUpdateDelgate instance will transmit to its child instances.\n         *\n         * @type {Number}\n         */\n        Object.defineProperty(ElementUpdateDelegate.prototype, 'transmissive', { value: DirtyType.NONE, writable: true });\n\n        /**\n         * @property\n         *\n         * Indicates the dirty flags in which this ElementUpdateDelegate is capable of receiving.\n         *\n         * @type {Number}\n         */\n        Object.defineProperty(ElementUpdateDelegate.prototype, 'receptive', { value: DirtyType.NONE, writable: true });\n\n        /**\n         * @property\n         *\n         * Indicates the conductor in which this ElementUpdateDelegate responds to (defaults to window).\n         *\n         * @type {Object}\n         */\n        Object.defineProperty(ElementUpdateDelegate.prototype, 'conductor', { value: window, writable: true });\n\n        /**\n         * @protected\n         *\n         * Gets the string representation of this ElementUpdateDelegate instance.\n         *\n         * @return {String}\n         */\n        ElementUpdateDelegate.prototype.toString = function()\n        {\n            return '[ElementUpdateDelegate{' + ((this.delegate && this.delegate.name) || 'undefined') + '}]';\n        };\n\n        return ElementUpdateDelegate;\n    }\n);\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  View model of any DOM element.\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'ui/Element',[\n        'utils/assert',\n        'utils/log',\n        'utils/keyOfValue',\n        'enums/DirtyType',\n        'ui/ElementUpdateDelegate'\n    ],\n    function\n    (\n        assert,\n        log,\n        keyOfValue,\n        DirtyType,\n        ElementUpdateDelegate\n    )\n    {\n        /**\n         * @constructor\n         *\n         * Creates a new Element instance.\n         *\n         * @param {Object} init Optional initial properties/element of this Element instance.\n         */\n        function Element(init)\n        {\n            log(this.toString()+':new(', init, ')');\n\n            if (init)\n            {\n                if (init instanceof HTMLElement)\n                {\n                    this.element = init;\n                }\n                else if (init instanceof Element)\n                {\n                    this.element = init.element;\n                }\n                else if (typeof init === 'object')\n                {\n                    for (var property in init)\n                    {\n                        if (this.hasProperty(property))\n                        {\n                            this[property] = init[property];\n                        }\n                    }\n                }\n            }\n\n            this.init();\n        }\n\n        /**\n         * @property\n         *\n         * View of this Element instance.\n         *\n         * @type {Object}\n         */\n        Object.defineProperty(Element.prototype, 'element',\n        {\n            get: function()\n            {\n                if (!this._element)\n                {\n                    Object.defineProperty(this, '_element', { value: this.factory(), writable: true });\n                }\n\n                return this._element;\n            },\n            set: function(value)\n            {\n                this.__set_element(value);\n            }\n        });\n\n        /**\n         * @property\n         *\n         * ID of this Element instance.\n         *\n         * @type {String}\n         */\n        Object.defineProperty(Element.prototype, 'id',\n        {\n            get: function()\n            {\n                return this.element.id;\n            },\n            set: function(value)\n            {\n                this.element.setAttribute('id', value);\n            }\n        });\n\n        /**\n         * @property\n         *\n         * Instance name of this Element instance.\n         *\n         * @type {String}\n         */\n        Object.defineProperty(Element.prototype, 'name', { value: null, writable: true });\n\n        /**\n         * @property\n         *\n         * Class of this Element instance.\n         *\n         * @type {String}\n         */\n        Object.defineProperty(Element.prototype, 'class',\n        {\n            get: function()\n            {\n                return this.element.className;\n            },\n            set: function(value)\n            {\n                this.element.className = value;\n            }\n        });\n\n        /**\n         * @property\n         *\n         * Class list of this Element instance.\n         *\n         * @type {String}\n         */\n        Object.defineProperty(Element.prototype, 'classList',\n        {\n            get: function()\n            {\n                return this.element.classList;\n            },\n            set: function(value)\n            {\n                this.element.classList = value;\n            }\n        });\n\n        /**\n         * @property (read-only)\n         *\n         * Virtual child elements.\n         *\n         * @type {Object}\n         */\n        Object.defineProperty(Element.prototype, 'virtualChildren', { value: {}, writable: false });\n\n        /**\n         * @property\n         *\n         * Specifies whether this Element instance generates debug data.\n         *\n         * @type {Object}\n         */\n        Object.defineProperty(Element.prototype, 'debug',\n        {\n            get: function()\n            {\n                return this._debug;\n            },\n            set: function(value)\n            {\n                Object.defineProperty(this, '_debug', { value: value, writable: true });\n\n                this.updateDelegate.debug = value;\n            }\n        });\n\n        /**\n         * @property\n         *\n         * Specifies the data providers of this Element instance.\n         *\n         * @type {*}\n         */\n        Object.defineProperty(Element.prototype, 'data',\n        {\n            get: function()\n            {\n                return this._data;\n            },\n            set: function(value)\n            {\n                Object.defineProperty(this, '_data', { value: value, writable: true });\n\n                this.updateDelegate.setDirty(DirtyType.DATA);\n            }\n        });\n\n        /**\n         * @property\n         *\n         * ViewUpdateDelegate instance.\n         *\n         * @type {ViewUpdateDelegate}\n         */\n        Object.defineProperty(Element.prototype, 'updateDelegate',\n        {\n            get: function()\n            {\n                if (!this._updateDelegate)\n                {\n                    Object.defineProperty(this, '_updateDelegate', { value: new ElementUpdateDelegate(this), writable: false });\n                }\n\n                return this._updateDelegate;\n            }\n        });\n\n        /**\n         * Initializes this Element instance. Must manually invoke.\n         */\n        Element.prototype.init = function()\n        {\n            log(this.toString()+'::init()');\n\n            this.updateDelegate.init();\n        };\n\n        /**\n         * Destroys this Element instance.\n         */\n        Element.prototype.destroy = function()\n        {\n            log(this.toString()+'::destroy()');\n\n            this.updateDelegate.destroy();\n        };\n\n        /**\n         * Handler invoked whenever a visual update is required.\n         */\n        Element.prototype.update = function()\n        {\n            log(this.toString()+'::update()');\n        };\n\n        /**\n         * Adds a virtual child to this Element instance.\n         *\n         * @param {Object} child\n         * @param {Object} The added child.\n         */\n        Element.prototype.addVirtualChild = function(child, name)\n        {\n            if (!assert(child instanceof Element, 'Child must conform to VARS Element.')) return null;\n\n            name = name || child.name;\n\n            if (!assert(name || child.name, 'Child name must be provided.')) return null;\n            if (!assert(!this.virtualChildren[name], 'Child name is already taken.')) return null;\n\n            this.virtualChildren[name] = child;\n            child.name = name;\n\n            return child;\n        };\n\n        /**\n         * Removes a virtual child from this Element instance.\n         *\n         * @param  {Object} child\n         *\n         * @return {Object} The removed child.\n         */\n        Element.prototype.removeVirtualChild = function(child)\n        {\n            if (!assert(child, 'Child is null.')) return null;\n            if (!assert(child instanceof Element, 'Child must conform to VARS Element.')) return null;\n\n            var key = keyOfValue(this.virtualChildren, child);\n\n            if (key)\n            {\n                delete this.virtualChildren[key];\n            }\n\n            return child;\n        };\n\n        /**\n         * Removes a virtual child by its name.\n         *\n         * @param  {String} name\n         *\n         * @return {Object} The removed child.\n         */\n        Element.prototype.removeVirtualChildByName = function(name)\n        {\n            if (!assert(name, 'Name is null.')) return null;\n\n            var child = this.virtualChildren[name];\n\n            if (child)\n            {\n                delete this.virtualChildren[name];\n            }\n\n            return child;\n        };\n\n        /**\n         * Creates the associated DOM element from scratch.\n         *\n         * @return {Element}\n         */\n        Element.prototype.factory = function()\n        {\n            return document.createElement('div');\n        };\n\n        /**\n         * @public\n         *\n         * Gets the string representation of this Element instance.\n         *\n         * @return {String}\n         */\n        Element.prototype.toString = function()\n        {\n            return '[Element{' + this.name + '}]';\n        };\n\n        /**\n         * @private\n         *\n         * Stubbed out setter for element property (for overriding purposes).\n         *\n         * @param  {Object} value The DOM element.\n         */\n        Element.prototype.__set_element = function(value)\n        {\n            // Ensure that this is not overwritable.\n            assert(!this._element, 'Element cannot be overwritten.');\n            assert((value instanceof HTMLElement) || (value instanceof Element), 'Invalid element type specified. Must be an instance of HTMLElement or Element.');\n\n            if (value instanceof Element)\n            {\n                Object.defineProperty(this, '_element', { value: value.element, writable: true });\n            }\n            else\n            {\n                Object.defineProperty(this, '_element', { value: value, writable: true });\n            }\n        };\n\n        return Element;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'utils/inherit',[\n    ],\n    function\n    (\n    )\n    {\n\n        /**\n         * Sets up prototypal inheritance between a child class and a parent class. This process\n         * also creates a new prototype method hasProperty() for the child class which allows\n         * verifying inherited properties (as opposed to the native hasOwnProperty() method).\n         *\n         * @param  {Object} child   Child class (function)\n         * @param  {Object} parent  Parent class (function)\n         *\n         * @return {Object} Parent class (function).\n         */\n        function inherit(child, parent)\n        {\n            child.prototype = Object.create(parent.prototype);\n            child.prototype.constructor = child;\n\n            // Create a 'hasProperty' member during the process to be able to identify all immediate and inherited properties.\n            Object.defineProperty(child.prototype, 'hasProperty',\n            {\n                value: function(prop)\n                {\n                    return child.prototype.hasOwnProperty(prop) || (parent.prototype.hasProperty && parent.prototype.hasProperty(prop)) || parent.prototype.hasOwnProperty(prop);\n                },\n                writable: false\n            });\n\n            return parent;\n        }\n\n        return inherit;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  View model of DOM 'video' element.\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'ui/Video',[\n        'utils/assert',\n        'utils/log',\n        'utils/inherit',\n        'enums/DirtyType',\n        'ui/Element'\n    ],\n    function\n    (\n        assert,\n        log,\n        inherit,\n        DirtyType,\n        Element\n    )\n    {\n        /**\n         * @constructor\n         *\n         * Creates a new Video instance.\n         */\n        function Video(init)\n        {\n            Element.call(this, init);\n        } var parent = inherit(Video, Element);\n\n        /**\n         * @static\n         *\n         * Constants for the 'preload' attribute.\n         *\n         * @type {Object}\n         *\n         * @see  http://www.w3schools.com/tags/tag_video.asp\n         */\n        Video.PRELOAD =\n        {\n            AUTO:     'auto',\n            METADATA: 'metada',\n            NONE:     'none'\n        };\n\n        /**\n         * @property\n         *\n         * Specifies that the video will start playing as soon as it is ready.\n         *\n         * @type {Boolean}\n         */\n        Object.defineProperty(Video.prototype, 'autoplay',\n        {\n            get: function()\n            {\n                return this.element.autoplay;\n            },\n            set: function(value)\n            {\n                this.element.autoplay = value;\n                this.updateDelegate.setDirty(DirtyType.CUSTOM);\n            }\n        });\n\n        /**\n         * @property\n         *\n         * Specifies that video controls should be displayed (such as a play/pause button etc).\n         *\n         * @type {Boolean}\n         */\n        Object.defineProperty(Video.prototype, 'controls',\n        {\n            get: function()\n            {\n                return this.element.controls;\n            },\n            set: function(value)\n            {\n                this.element.controls = value;\n                this.updateDelegate.setDirty(DirtyType.CUSTOM);\n            }\n        });\n\n        /**\n         * @property\n         *\n         * Specifies that the video will start over again, every time it is finished.\n         *\n         * @type {Boolean}\n         */\n        Object.defineProperty(Video.prototype, 'loop',\n        {\n            get: function()\n            {\n                return this.element.loop;\n            },\n            set: function(value)\n            {\n                this.element.loop = value;\n                this.updateDelegate.setDirty(DirtyType.CUSTOM);\n            }\n        });\n\n        /**\n         * @property\n         *\n         * Specifies that the audio output of the video should be muted.\n         *\n         * @type {Boolean}\n         */\n        Object.defineProperty(Video.prototype, 'muted',\n        {\n            get: function()\n            {\n                return this.element.muted;\n            },\n            set: function(value)\n            {\n                this.element.muted = value;\n                this.updateDelegate.setDirty(DirtyType.CUSTOM);\n            }\n        });\n\n        /**\n         * @property\n         *\n         * Specifies an image to be shown while the video is downloading, or until the user hits the play button.\n         *\n         * @type {String}   URL of image\n         */\n        Object.defineProperty(Video.prototype, 'poster',\n        {\n            get: function()\n            {\n                return this.element.poster;\n            },\n            set: function(value)\n            {\n                this.element.poster = value;\n                this.updateDelegate.setDirty(DirtyType.CUSTOM);\n            }\n        });\n\n        /**\n         * @property\n         *\n         * Specifies if and how the author thinks the video should be loaded when the page loads\n         *\n         * @type {String}   See Video.AUTOPLAY\n         */\n        Object.defineProperty(Video.prototype, 'preload',\n        {\n            get: function()\n            {\n                return this.element.preload;\n            },\n            set: function(value)\n            {\n                this.element.preload = value;\n                this.updateDelegate.setDirty(DirtyType.CUSTOM);\n            }\n        });\n\n        /**\n         * @property\n         *\n         * Array of sources containing elements in the form of:\n         *     Object\n         *     {\n         *         src: {PATH_OF_SOURCE} (String)\n         *         type: {TYPE_OF_SOURCE} (String)\n         *     }\n         *\n         * @type {Array}\n         */\n        Object.defineProperty(Video.prototype, 'source',\n        {\n            get: function()\n            {\n                return this._source;\n            },\n            set: function(value)\n            {\n                Object.defineProperty(this, '_source', { value: value, writable: true });\n                this.updateDelegate.setDirty(DirtyType.DATA);\n            }\n        });\n\n        /**\n         * @inheritDoc\n         */\n        Video.prototype.update = function(dirtyTypes)\n        {\n            if (this.updateDelegate.isDirty(DirtyType.DATA))\n            {\n                this._updateSource();\n            }\n\n            if (this.updateDelegate.isDirty(DirtyType.CUSTOM))\n            {\n\n            }\n\n            parent.prototype.update.call(this, dirtyTypes);\n        };\n\n        /**\n         * @inheritDoc\n         */\n        Video.prototype.factory = function()\n        {\n            return document.createElement('video');\n        };\n\n        /**\n         * @private\n         *\n         * Updates the sources in this Video instance.\n         */\n        Video.prototype._updateSource = function()\n        {\n            var i;\n            var arrlen;\n\n            // Update source(s).\n            var oldSources = this.element.getElementsByTagName('source');\n\n            arrlen = oldSources.length;\n\n            for (i = 0; i < arrlen; i++)\n            {\n                var oldSource = oldSources[i];\n\n                this.element.removeChild(oldSource);\n            }\n\n            if (!this.source) return;\n\n            arrlen = this.source.length;\n\n            for (i = 0; i < arrlen; i++)\n            {\n                var newSource = document.createElement('source');\n                var path = this.source[i].src;\n                var type = this.source[i].type;\n                var ext = path.split('.').pop();\n\n                newSource.setAttribute('src', path);\n                newSource.setAttribute('type', type || 'video/'+ext);\n\n                this.element.appendChild(newSource);\n            }\n        };\n\n        /**\n         * @inheritDoc\n         */\n        Video.prototype.toString = function()\n        {\n            return '[Video{' + this.name + '}]';\n        };\n\n        /**\n         * @inheritDoc\n         */\n        Video.prototype.__set_element = function(value)\n        {\n            assert(value instanceof HTMLVideoElement, 'Invalid element type specified. Must be an instance of HTMLVideoElement.');\n            parent.prototype.__set_element.call(this, value);\n        };\n\n        return Video;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  Module of methods/classes related to UI manipulation and\n *  operations.\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'ui',[\n        'ui/changeElementState',\n        'ui/getElementState',\n        'ui/translate',\n        'ui/translate3d',\n        'ui/transform',\n        'ui/getViewportRect',\n        'ui/getRect',\n        'ui/getIntersectRect',\n        'ui/Element',\n        'ui/Video',\n        'ui/ElementUpdateDelegate'\n    ],\n    function\n    (\n        changeElementState,\n        getElementState,\n        translate,\n        translate3d,\n        transform,\n        getViewportRect,\n        getRect,\n        getIntersectRect,\n        Element,\n        Video,\n        ElementUpdateDelegate\n    )\n    {\n        var api = function(obj) { return obj; };\n\n        Object.defineProperty(api, 'changeElementState', { value: changeElementState, writable: false, enumerable: true });\n        Object.defineProperty(api, 'getElementState', { value: getElementState, writable: false, enumerable: true });\n        Object.defineProperty(api, 'translate', { value: translate, writable: false, enumerable: true });\n        Object.defineProperty(api, 'translate3d', { value: translate3d, writable: false, enumerable: true });\n        Object.defineProperty(api, 'transform', { value: transform, writable: false, enumerable: true });\n        Object.defineProperty(api, 'getViewportRect', { value: getViewportRect, writable: false, enumerable: true });\n        Object.defineProperty(api, 'getRect', { value: getRect, writable: false, enumerable: true });\n        Object.defineProperty(api, 'getIntersectRect', { value: getIntersectRect, writable: false, enumerable: true });\n        Object.defineProperty(api, 'Element', { value: Element, writable: false, enumerable: true });\n        Object.defineProperty(api, 'Video', { value: Video, writable: false, enumerable: true });\n        Object.defineProperty(api, 'ElementUpdateDelegate', { value: ElementUpdateDelegate, writable: false, enumerable: true });\n\n        return api;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'utils/namespace',[\n        'utils/assert'\n    ],\n    function\n    (\n        assert\n    )\n    {\n        /**\n         * Creates the specified namespace in the specified scope.\n         *\n         * @param  {String} identifiers Namespace identifiers with parts separated by dots.\n         * @param  {Object} scope       (Optional) Object to create namespace in (defaults to window).\n         *\n         * @return {Object} Reference tothe created namespace.\n         */\n        function namespace(identifiers, scope)\n        {\n            if (!assert(typeof identifiers === 'string', 'Invalid identifiers specified.')) return null;\n            if (!assert(typeof scope === 'undefined' || typeof scope === 'object', 'Invalid scope specified.')) return null;\n\n            var groups = identifiers.split('.');\n            var currentScope = (scope === undefined || scope === null) ? window : scope;\n\n            for (var i = 0; i < groups.length; i++)\n            {\n                currentScope = currentScope[groups[i]] || (currentScope[groups[i]] = {});\n            }\n\n            return currentScope;\n        }\n\n        return namespace;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'utils/module',[\n    ],\n    function\n    (\n    )\n    {\n        /**\n         * Creates a new module and attaches it to the window when DOM is ready. Option\n         * to pass an init object to initialize the module. A typical use-case will be to\n         * create a new Element module.\n         *\n         * @param  {Function}   impl Module implementation.\n         * @param  {Object}     init Optional object passed into the impl.\n         */\n        function module(impl, init)\n        {\n            if (!document) return;\n\n            var onLoaded = function(event)\n            {\n                if (document.addEventListener)\n                {\n                    document.removeEventListener('DOMContentLoaded', onLoaded, false);\n                    window.removeEventListener('load', onLoaded, false);\n                }\n                else if (document.attachEvent)\n                {\n                    document.detachEvent('onreadystatechange', onLoaded);\n                    window.detachEvent('onload', onLoaded);\n                }\n\n                setTimeout(initialize, 1);\n            };\n\n            var initialize = function()\n            {\n                var module = new impl(init);\n\n                if (window && !window.module)\n                {\n                    window.module = module;\n                }\n            };\n\n            if (document.readyState === 'complete')\n            {\n                return setTimeout(initialize, 1);\n            }\n\n            if (document.addEventListener)\n            {\n                document.addEventListener('DOMContentLoaded', onLoaded, false);\n                window.addEventListener('load', onLoaded, false);\n            }\n            else if (document.attachEvent)\n            {\n                document.attachEvent('onreadystatechange', onLoaded);\n                window.attachEvent('onload', onLoaded);\n            }\n        }\n\n        return module;\n    }\n);\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'utils/isNull',[\n    ],\n    function\n    (\n    )\n    {\n        /**\n         * Checks if a given object is equal to null (type-insensitive).\n         *\n         * @param  {Object} object\n         *\n         * @return {Boolean}\n         */\n        function isNull(object)\n        {\n            if (object === undefined || object === null)\n            {\n                return true;\n            }\n            else\n            {\n                return false;\n            }\n        }\n\n        return isNull;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  Asset loader for images, videos, and audios.\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'utils/AssetLoader',[\n        'utils/assert',\n        'utils/log',\n        'utils/inherit',\n        'events/EventType',\n        'events/EventDispatcher'\n    ],\n    function\n    (\n        assert,\n        log,\n        inherit,\n        EventType,\n        EventDispatcher\n    )\n    {\n        /**\n         * @constant\n         *\n         * Common image file extensions.\n         *\n         * @type {Array}\n         */\n        var IMAGE_EXTENSIONS = ['jpg', 'png', 'svg', 'jpeg', 'gif'];\n\n        /**\n         * @constant\n         *\n         * Common video file extensions.\n         *\n         * @type {Array}\n         */\n        var VIDEO_EXTENSIONS = ['mp4', 'mpeg', 'ogg', 'ogv', 'mov', 'avi', 'flv'];\n\n        /**\n         * @constant\n         *\n         * Common audio file extensions.\n         *\n         * @type {Array}\n         */\n        var AUDIO_EXTENSIONS = ['mp3', 'mp4', 'mpeg', 'flac', 'wav', 'ogg'];\n\n        /**\n         * @constant\n         *\n         * Mime type lookup.\n         *\n         * @type {Object}\n         */\n        var MIME_TYPES =\n        {\n            IMAGE:\n            {\n                jpg:  'image/jpeg',\n                jpeg: 'image/jpeg',\n                gif:  'image/gif',\n                png:  'image/png',\n                svg:  'image/svg'\n            },\n            VIDEO:\n            {\n                mp4: 'video/mp4',\n                mov: 'video/quicktime',\n                mpeg: 'video/mpeg',\n                ogg: 'video/ogg',\n                ogv: 'video/ogg',\n                avi: 'video/avi',\n                flv: 'video/x-flv'\n            },\n            AUDIO:\n            {\n                mp3:  'audio/mpeg',\n                mpeg: 'audio/mpeg',\n                mp4:  'audio/mp4',\n                flac: 'audio/flac',\n                ogg:  'audio/ogg',\n                wav:  'audio/vnd.wave'\n            }\n        };\n\n        /**\n         * @constructor\n         *\n         * Creates a new AssetLoader instance.\n         */\n        function AssetLoader()\n        {\n            EventDispatcher.call(this);\n\n            if (this.debug) log('[AssetLoader]::new()');\n        } var parent = inherit(AssetLoader, EventDispatcher);\n\n        /**\n         * @static\n         *\n         * Different states of AssetLoader.\n         *\n         * @type {Enum}\n         */\n        AssetLoader.STATE =\n        {\n            IDLE:        0,\n            IN_PROGRESS: 1,\n            COMPLETED:   2,\n            FAILED:      3,\n            ABORTED:     4\n        };\n\n        /**\n         * @static\n         *\n         * Different supported asset types of AssetLoader.\n         *\n         * @type {Object}\n         */\n        AssetLoader.TYPE =\n        {\n            IMAGE: 'image',\n            VIDEO: 'video',\n            AUDIO: 'audio'\n        };\n\n        /**\n         * @property\n         *\n         * Specifies whether this AssetLoader instance generates debug data.\n         *\n         * @type {Object}\n         */\n        Object.defineProperty(AssetLoader.prototype, 'debug', { value: false, writable: true });\n\n        /**\n         * @property\n         *\n         * Specifies the current state of this AssetLoader instance.\n         *\n         * @type {Number}\n         */\n        Object.defineProperty(AssetLoader.prototype, 'state',\n        {\n            get: function()\n            {\n                if (!this._state)\n                {\n                    Object.defineProperty(this, '_state', { value: AssetLoader.STATE.IDLE, writable: true });\n                }\n\n                return this._state;\n            }\n        });\n\n        /**\n         * @property\n         *\n         * View of this AssetLoader instance.\n         *\n         * @type {Object}\n         */\n        Object.defineProperty(AssetLoader.prototype, 'queue',\n        {\n            get: function()\n            {\n                if (!this._queue)\n                {\n                    Object.defineProperty(this, '_queue', { value: [], writable: true });\n                }\n\n                return this._queue;\n            }\n        });\n\n        /**\n         * @property\n         *\n         * Loaded assets.\n         *\n         * @type {Object}\n         */\n        Object.defineProperty(AssetLoader.prototype, 'assets',\n        {\n            get: function()\n            {\n                if (!this._assets)\n                {\n                    Object.defineProperty(this, '_assets', { value: {}, writable: true });\n                }\n\n                return this._assets;\n            }\n        });\n\n        /**\n         * @property\n         *\n         * Specifies whether the XHR operations run in async.\n         *\n         * @type {Boolean}\n         */\n        Object.defineProperty(AssetLoader.prototype, 'async',\n        {\n            get: function()\n            {\n                if (this._async === undefined)\n                {\n                    return true;\n                }\n                else\n                {\n                    return this._async;\n                }\n            },\n            set: function(value)\n            {\n                assert(this.state !== AssetLoader.STATE.IN_PROGRESS, 'Cannot change the async mode while it is in progress.');\n\n                if (this.state !== AssetLoader.STATE.IN_PROGRESS)\n                {\n                    Object.defineProperty(this, '_async', { value: value, writable: true });\n                }\n            }\n        });\n\n        /**\n         * @property\n         *\n         * Specifies the total bytes loaded for all assets in the queue.\n         *\n         * @type {Number}\n         */\n        Object.defineProperty(AssetLoader.prototype, 'bytesLoaded',\n        {\n            get: function()\n            {\n                if (!this._bytesLoaded)\n                {\n                    return 0.0;\n                }\n                else\n                {\n                    var total = 0;\n                    var arrlen = this._bytesLoaded.length;\n\n                    for (var i = 0; i < arrlen; i++)\n                    {\n                        total += this._bytesLoaded[i];\n                    }\n\n                    return total;\n                }\n\n                return this._bytesLoaded;\n            }\n        });\n\n        /**\n         * @property\n         *\n         * Specifies the total bytes for all assets in the queue.\n         *\n         * @type {Number}\n         */\n        Object.defineProperty(AssetLoader.prototype, 'bytesTotal',\n        {\n            get: function()\n            {\n                if (!this._bytesTotal)\n                {\n                    return 0.0;\n                }\n                else\n                {\n                    var total = 0;\n                    var arrlen = this._bytesTotal.length;\n\n                    for (var i = 0; i < arrlen; i++)\n                    {\n                        total += this._bytesTotal[i];\n                    }\n\n                    return total;\n                }\n            }\n        });\n\n        /**\n         * @property\n         *\n         * Specifies the current progress (in decimals) of the entire operation.\n         *\n         * @return {Number}\n         */\n        Object.defineProperty(AssetLoader.prototype, 'progress',\n        {\n            get: function()\n            {\n                if (!this._bytesTotal || !this._bytesLoaded) return 0.0;\n                if (this._bytesTotal.length !== this._bytesLoaded.length) return 0.0;\n\n                var arrlen = this._bytesTotal.length;\n                var sum = 0.0;\n\n                for (var i = 0; i < arrlen; i++)\n                {\n                    var loaded = this._bytesLoaded[i];\n                    var total = this._bytesTotal[i];\n\n                    if (total > 0.0)\n                    {\n                        sum += loaded/total;\n                    }\n                }\n\n                return sum/arrlen;\n            }\n        });\n\n        /**\n         * Initializes this AssetLoader instance and begins loading assets in the queue.\n         */\n        AssetLoader.prototype.init = function()\n        {\n            if (this.queue.length < 1) return;\n\n            if (this.debug) log('[AssetLoader]::init()');\n\n            var arrlen = this.queue.length;\n\n            this._xhrs = [];\n            this._pending = arrlen;\n\n            for (var i = 0; i < arrlen; i++)\n            {\n                var target = this.queue[i];\n\n                if (this.debug) log('[AssetLoader]::Started loading: ' + target.path);\n\n                var xhr = this.getXHR({ id: i, path: target.path, type: target.type });\n                xhr.send();\n\n                this._xhrs.push(xhr);\n            }\n        };\n\n        /**\n         * Destroys this AssetLoader instance and resets its state to idle for recyclable use.\n         */\n        AssetLoader.prototype.destroy = function()\n        {\n            if (this._xhrs)\n            {\n                var arrlen = this._xhrs.length;\n\n                for (var i = 0; i < arrlen; i++)\n                {\n                    var xhr = this._xhrs[i];\n                    xhr.abort();\n                    this._xhrs[i] = null;\n                }\n\n                this._queue = null;\n                this._assets = null;\n                this._bytesLoaded = null;\n                this._bytesTotal = null;\n            }\n\n            this._state = AssetLoader.STATE.IDLE;\n        };\n\n        /**\n         * Adds target loading assets to the queue. Assumes each parameter is as follows:\n         * Object\n         * {\n         *     path: {PATH_OF_ASSET},\n         *     type: {TYPE_OF_ASSET} (can only be 'image', 'video', or 'audio')\n         * }\n         */\n        AssetLoader.prototype.enqueue = function()\n        {\n            assert(arguments && arguments.length > 0, 'There are no arguments specified.');\n            assert(this.state !== AssetLoader.STATE.IN_PROGRESS, 'Enqueueing is prohibited when the state is in progress.');\n\n            if (!arguments) return;\n            if (arguments.length <= 0) return;\n            if (this.state === AssetLoader.STATE.IN_PROGRESS) return;\n\n            if (this.debug) log('[AssetLoader]::enqueue(' + arguments + ')');\n\n            var arrlen = arguments.length;\n\n            for (var i = 0; i < arrlen; i++)\n            {\n                var arg = arguments[i];\n\n                assert(typeof arg === 'string' || typeof arg === 'object', 'Each item to be enqueued must be a string of the target path or an object containing a \"path\" key and/or a \"type\" key');\n                assert(typeof arg === 'string' || typeof arg.path === 'string', 'Invalid path specified: ' + arg.path + '.');\n\n                var path = (typeof arg === 'string') ? arg : arg.path;\n                var type = arg.type;\n\n                if (!type)\n                {\n                    var ext = path.split('.').pop().toLowerCase();\n\n                    if (IMAGE_EXTENSIONS.indexOf(ext) > -1)\n                    {\n                        type = AssetLoader.TYPE.IMAGE;\n                    }\n                    else if (VIDEO_EXTENSIONS.indexOf(ext) > -1)\n                    {\n                        type = AssetLoader.TYPE.VIDEO;\n                    }\n                    else if (AUDIO_EXTENSIONS.indexOf(ext) > -1)\n                    {\n                        type = AssetLoader.TYPE.AUDIO;\n                    }\n                    else\n                    {\n                        throw '[AssetLoader]::Unsupported asset format: ' + path;\n                    }\n                }\n\n                if (type)\n                {\n                    this.queue.push({ path: path, type: type });\n\n                    if (!this._bytesLoaded) this._bytesLoaded = [];\n                    if (!this._bytesTotal) this._bytesTotal = [];\n\n                    this._bytesLoaded.push(0.0);\n                    this._bytesTotal.push(0.0);\n                }\n            }\n        };\n\n        /**\n         * Removes loading targets from the queue. Each parameter is a path that must match one that\n         * is already in the queue.\n         */\n        AssetLoader.prototype.dequeue = function()\n        {\n            assert(arguments && arguments.length > 0, 'There are no arguments specified.');\n            assert(this.state !== AssetLoader.STATE.IN_PROGRESS, 'Dequeueing is prohibited when the state is in progress.');\n\n            if (!arguments) return;\n            if (arguments.length <= 0) return;\n            if (this.state === AssetLoader.STATE.IN_PROGRESS) return;\n\n            var arrlen = arguments.length;\n\n            for (var i = 0; i < arrlen; i++)\n            {\n                var arg = arguments[i];\n\n                assert(typeof arg === 'string', 'Expecting path to be a string.');\n\n                var n = this.queue.length;\n\n                for (var j = 0; j < n; j++)\n                {\n                    var target = this.queue[j];\n\n                    if (target.path === arg)\n                    {\n                        this.queue.splice(j, 1);\n                        this.bytesLoaded.splice(j, 1);\n                        this.bytesTotal.splice(j, 1);\n\n                        break;\n                    }\n                }\n            }\n        };\n\n        /**\n         * Creates and returns a new XHR instance with prepopulated configurations.\n         *\n         * @param  {Object} data\n         *\n         * @return {Object} XHR instance.\n         */\n        AssetLoader.prototype.getXHR = function(data)\n        {\n            var ext = data.path.split('.').pop().toLowerCase();\n            var mimeType = MIME_TYPES[data.type.toUpperCase()][ext];\n\n            if (!mimeType)\n            {\n                throw '[AssetLoader]:: Unsupported asset format: ' + data.path;\n            }\n\n            var xhr = new XMLHttpRequest();\n            xhr.addEventListener('progress', this._onXHRProgress.bind(this), false);\n            xhr.addEventListener('load', this._onXHRLoadComplete.bind(this), false);\n            xhr.addEventListener('error', this._onXHRLoadError.bind(this), false);\n            xhr.addEventListener('abort', this._onXHRAbort.bind(this), false);\n\n            xhr.open('GET', data.path, this.async);\n            xhr.overrideMimeType(mimeType);\n            xhr.data = data;\n\n            return xhr;\n        };\n\n        /**\n         * @private\n         *\n         * Handler invoked when an XHR instance is in progress.\n         *\n         * @param  {Object} event\n         */\n        AssetLoader.prototype._onXHRProgress = function(event)\n        {\n            if (!event.lengthComputable) return;\n\n            var xhr = event.currentTarget;\n            var id = xhr.data.id;\n            var path = xhr.data.path;\n            var type = xhr.data.type;\n            var bytesLoaded = event.loaded;\n            var bytesTotal = event.total;\n\n            // Hash progress into XHR data.\n            xhr.data.bytesLoaded = bytesLoaded;\n            xhr.data.bytesTotal = bytesTotal;\n\n            this._bytesLoaded[id] = bytesLoaded;\n            this._bytesTotal[id] = bytesTotal;\n\n            if (!this._bytesLoaded) this._bytesLoaded = [];\n\n            if (this.debug) log('[AssetLoader]::_onXHRProgress(\"'+path+'\":'+bytesLoaded+'/'+bytesTotal+')');\n\n            var progressEvent = document.createEvent('CustomEvent');\n            progressEvent.initCustomEvent(EventType.OBJECT.PROGRESS, true, true, { id: id, path: path, type: type, pending: this._pending, loaded: this.bytesLoaded, total: this.bytesTotal });\n\n            this.dispatchEvent(progressEvent);\n        };\n\n        /**\n         * @private\n         *\n         * Handler invoked when an XHR instance completes its operation.\n         *\n         * @param  {Object} event\n         */\n        AssetLoader.prototype._onXHRLoadComplete = function(event)\n        {\n            var xhr = event.currentTarget;\n            var id = xhr.data.id;\n            var path = xhr.data.path;\n            var type = xhr.data.type;\n\n            if (this.debug) log('[AssetLoader]::_onXHRLoadComplete(\"'+path+'\"\")');\n\n            this._pending--;\n\n            var loadEvent = document.createEvent('CustomEvent');\n            loadEvent.initCustomEvent(EventType.OBJECT.LOAD, true, true, { id: id, path: path, type: type, pending: this._pending, loaded: this.bytesLoaded, total: this.bytesTotal });\n\n            this.dispatchEvent(loadEvent);\n        };\n\n        /**\n         * @private\n         *\n         * Handler invoked when an XHR instance fails its operation.\n         *\n         * @param  {Object} event\n         */\n        AssetLoader.prototype._onXHRLoadError = function(event)\n        {\n            var xhr = event.currentTarget;\n            var id = xhr.data.id;\n            var path = xhr.data.path;\n            var type = xhr.data.type;\n\n            if (this.debug) log('[AssetLoader]::_onXHRLoadError(\"'+path+'\"\")');\n\n            this._pending--;\n\n            var errorEvent = document.createEvent('CustomEvent');\n            errorEvent.initCustomEvent(EventType.OBJECT.ERROR, true, true, { id: id, path: path, type: type, pending: this._pending, loaded: this.bytesLoaded, total: this.bytesTotal });\n\n            this.dispatchEvent(errorEvent);\n\n            if (this._pending === 0)\n            {\n                var loadEvent = document.createEvent('CustomEvent');\n                loadEvent.initCustomEvent(EventType.OBJECT.LOAD, true, true, { id: id, path: path, type: type, pending: this._pending, loaded: this.bytesLoaded, total: this.bytesTotal });\n\n                this.dispatchEvent(loadEvent);\n            }\n        };\n\n        /**\n         * @private\n         *\n         * Handler invoked when an XHR aborts its operation.\n         *\n         * @param  {Object} event\n         */\n        AssetLoader.prototype._onXHRAbort = function(event)\n        {\n            var xhr = event.currentTarget;\n            var id = xhr.data.id;\n            var path = xhr.data.path;\n            var type = xhr.data.type;\n\n            if (this.debug) log('[AssetLoader]::_onXHRLoadError(\"'+path+'\"\")');\n\n            this._pending--;\n\n            var abortEvent = document.createEvent('CustomEvent');\n            abortEvent.initCustomEvent(EventType.OBJECT.ABORT, true, true, { id: id, path: path, type: type, pending: this._pending, loaded: this.bytesLoaded, total: this.bytesTotal });\n\n            this.dispatchEvent(abortEvent);\n\n            if (this._pending === 0)\n            {\n                var loadEvent = document.createEvent('CustomEvent');\n                loadEvent.initCustomEvent(EventType.OBJECT.LOAD, true, true, { id: id, path: path, type: type, pending: this._pending, loaded: this.bytesLoaded, total: this.bytesTotal });\n\n                this.dispatchEvent(loadEvent);\n            }\n        };\n\n        return AssetLoader;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  Module of utility methods/classes.\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'utils',[\n        'utils/assert',\n        'utils/debounce',\n        'utils/log',\n        'utils/namespace',\n        'utils/inherit',\n        'utils/sizeOf',\n        'utils/module',\n        'utils/keyOfValue',\n        'utils/isNull',\n        'utils/AssetLoader'\n    ],\n    function\n    (\n        assert,\n        debounce,\n        log,\n        namespace,\n        inherit,\n        sizeOf,\n        module,\n        keyOfValue,\n        isNull,\n        AssetLoader\n    )\n    {\n        var api = function(obj) { return obj; };\n\n        Object.defineProperty(api, 'assert', { value: assert, writable: false, enumerable: true });\n        Object.defineProperty(api, 'debounce', { value: debounce, writable: false, enumerable: true });\n        Object.defineProperty(api, 'log', { value: log, writable: false, enumerable: true });\n        Object.defineProperty(api, 'namespace', { value: namespace, writable: false, enumerable: true });\n        Object.defineProperty(api, 'inherit', { value: inherit, writable: false, enumerable: true });\n        Object.defineProperty(api, 'sizeOf', { value: sizeOf, writable: false, enumerable: true });\n        Object.defineProperty(api, 'module', { value: module, writable: false, enumerable: true });\n        Object.defineProperty(api, 'keyOfValue', { value: keyOfValue, writable: false, enumerable: true });\n        Object.defineProperty(api, 'isNull', { value: isNull, writable: false, enumerable: true });\n        Object.defineProperty(api, 'AssetLoader', { value: AssetLoader, writable: false, enumerable: true });\n\n        return api;\n    }\n);\n\n",
    "/**\n *  vars\n *  (c) VARIANTE (http://variante.io)\n *\n *  Construction of the VARS API.\n *\n *  This software is released under the MIT License:\n *  http://www.opensource.org/licenses/mit-license.php\n */\ndefine\n(\n    'vars',[\n        'enums',\n        'events',\n        'math',\n        'ui',\n        'utils'\n    ],\n    function\n    (\n        enums,\n        events,\n        math,\n        ui,\n        utils\n    )\n    {\n        var vars = function(obj) { return obj; };\n\n        /**\n         * Version.\n         *\n         * @type {String}\n         */\n        Object.defineProperty(vars, 'version', { value: '0.5.2', writable: false });\n\n        /**\n         * Indicates whether vars should behave in debug mode in runtime. This enables various\n         * features such as logging and assertion.\n         *\n         * @type {Boolean}\n         */\n        Object.defineProperty(vars, 'debug', { value: false, writable: true });\n\n        /**\n         * Inject the 'enums' module and all of its sub-modules into the main vars module.\n         */\n        inject('enums', enums);\n\n        /**\n         * Inject the 'events' module and all of its sub-modules into the main vars module.\n         */\n        inject('events', events);\n\n        /**\n         * Inject the 'math' module and all of its sub-modules into the main vars module.\n         */\n        inject('math', math);\n\n        /**\n         * Inject the 'ui' module and all of its sub-modules into the main vars module.\n         */\n        inject('ui', ui);\n\n        /**\n         * Inject the 'utils' module and all of its sub-modules into the main vars module.\n         */\n        inject('utils', utils);\n\n        /**\n         * @private\n         *\n         * Injects a module and all of its sub-modules into the main vars module.\n         *\n         * @param  {String} name   Name of the module (used as the key for the key-value pair in vars).\n         * @param  {Object} module Module object (used as value for the key-value pair in VARS).\n         */\n        function inject(name, module)\n        {\n            Object.defineProperty(vars, name, { value: module, writable: false });\n\n            for (var key in module)\n            {\n                if (module.hasOwnProperty(key))\n                {\n                    Object.defineProperty(vars, key, { value: module[key], writable: false });\n                }\n            }\n        }\n\n        return vars;\n    }\n);\n\n"
  ]
}